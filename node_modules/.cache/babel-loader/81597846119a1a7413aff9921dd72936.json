{"ast":null,"code":"var _jsxFileName = \"/Users/antonlyzun/Desktop/GoIT/goit-react-hw-04-phonebook/src/components/ContactForm/ContactForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { nanoid } from 'nanoid';\nimport PropTypes from \"prop-types\";\nimport css from './ContactForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ContactForm = () => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    if (name === 'name') {\n      setName();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: css.form,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n        title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n        required: true,\n        value: name,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Number\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"tel\",\n        name: \"number\",\n        pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n        title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n        required: true,\n        value: number,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: css.btn,\n      type: \"submit\",\n      children: \"Add contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}; // import React, { Component } from \"react\";\n// import { nanoid } from 'nanoid'\n// import PropTypes from \"prop-types\"\n// import css from './ContactForm.module.css'\n// export class ContactForm extends Component {\n//     state = {\n//         name: '',\n//         number: ''\n//     }\n//     handleChange = (e) => {\n//         const { name, value } = e.target\n//         this.setState({\n//             [name]: value\n//         })\n//     }\n//     handleSubmit = (e) => {\n//         e.preventDefault()\n//         const {name, number} = this.state\n//         const contactObj = {\n//             name: name,\n//             number: number,\n//             id: nanoid()\n//         }\n//         this.props.addContact(contactObj) \n//         this.resetState()\n//     }\n//     resetState = () => {\n//         this.setState({\n//             name: '',\n//             number: ''\n//         })\n//     }\n//     render() {\n//         const { handleSubmit, handleChange } = this\n//         const {name, number} = this.state\n//         return (\n//             <form className={css.form}  onSubmit={handleSubmit}>\n//                 <label>Name\n//                 <input\n//                     type=\"text\"\n//                     name=\"name\"\n//                     pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//                     title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n//                     required\n//                     value={name}\n//                     onChange={handleChange}\n//                 />\n//                 </label>\n//                 <label>Number\n//                 <input\n//                     type=\"tel\"\n//                     name=\"number\"\n//                     pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n//                     title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n//                     required\n//                     value={number}\n//                     onChange={handleChange}\n//                 />\n//                 </label>\n//                 <button className={css.btn} type='submit'>Add contact</button>\n//             </form>\n//         )\n//     }   \n// }\n\n_s(ContactForm, \"mgYk2feJE7Nd8w88JvjzPww6GtA=\");\n\n_c = ContactForm;\nContactForm.propTypes = {\n  addContact: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["/Users/antonlyzun/Desktop/GoIT/goit-react-hw-04-phonebook/src/components/ContactForm/ContactForm.jsx"],"names":["useState","nanoid","PropTypes","css","ContactForm","name","setName","number","setNumber","handleChange","e","value","target","form","handleSubmit","btn","propTypes","addContact","func","isRequired"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,GAAP,MAAgB,0BAAhB;;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAC7B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;;AACI,QAAMS,YAAY,GAAIC,CAAD,IAAO;AAC5B,UAAM;AAAEL,MAAAA,IAAF;AAAQM,MAAAA;AAAR,QAAkBD,CAAC,CAACE,MAA1B;;AAEI,QAAIP,IAAI,KAAK,MAAb,EAAqB;AACrBC,MAAAA,OAAO;AACV;AACJ,GANG;;AAQJ,sBACI;AAAM,IAAA,SAAS,EAAEH,GAAG,CAACU,IAArB;AAA2B,IAAA,QAAQ,EAAEC,YAArC;AAAA,4BACI;AAAA,sCACI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,IAAI,EAAC,MAFT;AAGI,QAAA,OAAO,EAAC,wHAHZ;AAII,QAAA,KAAK,EAAC,wIAJV;AAKI,QAAA,QAAQ,MALZ;AAMI,QAAA,KAAK,EAAET,IANX;AAOI,QAAA,QAAQ,EAAEI;AAPd;AAAA;AAAA;AAAA;AAAA,cADJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAYI;AAAA,wCACI;AACI,QAAA,IAAI,EAAC,KADT;AAEI,QAAA,IAAI,EAAC,QAFT;AAGI,QAAA,OAAO,EAAC,wFAHZ;AAII,QAAA,KAAK,EAAC,8FAJV;AAKI,QAAA,QAAQ,MALZ;AAMI,QAAA,KAAK,EAAEF,MANX;AAOI,QAAA,QAAQ,EAAEE;AAPd;AAAA;AAAA;AAAA;AAAA,cADJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ,eAuBI;AAAQ,MAAA,SAAS,EAAEN,GAAG,CAACY,GAAvB;AAA4B,MAAA,IAAI,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH,CAtCM,C,CAyCP;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;GArHaX,W;;KAAAA,W;AAuHbA,WAAW,CAACY,SAAZ,GAAwB;AACpBC,EAAAA,UAAU,EAAEf,SAAS,CAACgB,IAAV,CAAeC;AADP,CAAxB","sourcesContent":["import {useState} from \"react\";\nimport { nanoid } from 'nanoid'\nimport PropTypes from \"prop-types\"\nimport css from './ContactForm.module.css'\n\nexport const ContactForm = () => {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n        const handleChange = (e) => {\n        const { name, value } = e.target\n        \n            if (name === 'name') {\n            setName()\n        }\n    }\n\n    return (\n        <form className={css.form} onSubmit={handleSubmit}>\n            <label>Name\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required\n                    value={name}\n                    onChange={handleChange}\n                />\n            </label>\n            <label>Number\n                <input\n                    type=\"tel\"\n                    name=\"number\"\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    required\n                    value={number}\n                    onChange={handleChange}\n                />\n            </label>\n            <button className={css.btn} type='submit'>Add contact</button>\n        </form>\n    )\n};\n\n\n// import React, { Component } from \"react\";\n// import { nanoid } from 'nanoid'\n// import PropTypes from \"prop-types\"\n// import css from './ContactForm.module.css'\n\n// export class ContactForm extends Component {\n\n//     state = {\n//         name: '',\n//         number: ''\n//     }\n    \n//     handleChange = (e) => {\n//         const { name, value } = e.target\n        \n//         this.setState({\n//             [name]: value\n//         })\n//     }\n\n//     handleSubmit = (e) => {\n//         e.preventDefault()\n//         const {name, number} = this.state\n\n//         const contactObj = {\n//             name: name,\n//             number: number,\n//             id: nanoid()\n//         }\n        \n//         this.props.addContact(contactObj) \n\n//         this.resetState()\n//     }\n    \n//     resetState = () => {\n//         this.setState({\n//             name: '',\n//             number: ''\n//         })\n//     }\n\n//     render() {\n//         const { handleSubmit, handleChange } = this\n//         const {name, number} = this.state\n\n\n//         return (\n//             <form className={css.form}  onSubmit={handleSubmit}>\n//                 <label>Name\n//                 <input\n//                     type=\"text\"\n//                     name=\"name\"\n//                     pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//                     title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n//                     required\n//                     value={name}\n//                     onChange={handleChange}\n//                 />\n//                 </label>\n//                 <label>Number\n//                 <input\n//                     type=\"tel\"\n//                     name=\"number\"\n//                     pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n//                     title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n//                     required\n//                     value={number}\n//                     onChange={handleChange}\n//                 />\n//                 </label>\n//                 <button className={css.btn} type='submit'>Add contact</button>\n//             </form>\n//         )\n//     }   \n    \n// }\n\nContactForm.propTypes = {\n    addContact: PropTypes.func.isRequired\n}"]},"metadata":{},"sourceType":"module"}