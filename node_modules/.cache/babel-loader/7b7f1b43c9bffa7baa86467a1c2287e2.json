{"ast":null,"code":"// import { configureStore } from '@reduxjs/toolkit';\n// import { persistStore } from 'redux-persist'\n// import rootReducer from './root-reducer';\n// const store = configureStore({\n//   reducer: rootReducer,\n// });\n// export let persistor = persistStore(store);\n// export default store;\nimport { configureStore } from \"@reduxjs/toolkit\"; // import { createAction, createReducer } from '@reduxjs/toolkit'\n\nimport contactReducer from './contacts/contacts-slice';\nimport filterSlice from './filter/filter-slice';\nimport { persistStore, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nexport const store = configureStore({\n  reducer: {\n    contacts: contactReducer,\n    filter: filterSlice.reducer\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\nexport const persistor = persistStore(store);","map":{"version":3,"sources":["/Users/antonlyzun/Desktop/GoIT/goit-react-hw-06-phonebook/src/redux/store.js"],"names":["configureStore","contactReducer","filterSlice","persistStore","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","reducer","contacts","filter","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"mappings":"AAAA;AACA;AAEA;AAEA;AACA;AACA;AAGA;AAEA;AACA,SAASA,cAAT,QAA+B,kBAA/B,C,CACA;;AACA,OAAQC,cAAR,MAA6B,2BAA7B;AACA,OAAQC,WAAR,MAA0B,uBAA1B;AAEA,SAASC,YAAT,EAAwBC,KAAxB,EACIC,SADJ,EAEIC,KAFJ,EAGIC,OAHJ,EAIIC,KAJJ,EAKIC,QALJ,QAKqB,eALrB;AASA,OAAO,MAAMC,KAAK,GAAGV,cAAc,CAAC;AAChCW,EAAAA,OAAO,EAAE;AACLC,IAAAA,QAAQ,EAAEX,cADL;AAELY,IAAAA,MAAM,EAAEX,WAAW,CAACS;AAFf,GADuB;AAKlCG,EAAAA,UAAU,EAAGC,oBAAD,IACNA,oBAAoB,CAAC;AACjBC,IAAAA,iBAAiB,EAAE;AACfC,MAAAA,cAAc,EAAE,CAACb,KAAD,EAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,OAA1B,EAAmCC,KAAnC,EAA0CC,QAA1C;AADD;AADF,GAAD;AANQ,CAAD,CAA5B;AAaP,OAAO,MAAMS,SAAS,GAAGf,YAAY,CAACO,KAAD,CAA9B","sourcesContent":["// import { configureStore } from '@reduxjs/toolkit';\n// import { persistStore } from 'redux-persist'\n\n// import rootReducer from './root-reducer';\n\n// const store = configureStore({\n//   reducer: rootReducer,\n// });\n\n\n// export let persistor = persistStore(store);\n\n// export default store;\nimport { configureStore } from \"@reduxjs/toolkit\";\n// import { createAction, createReducer } from '@reduxjs/toolkit'\nimport  contactReducer  from './contacts/contacts-slice'\nimport  filterSlice  from './filter/filter-slice'\n\nimport { persistStore,  FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER, } from 'redux-persist';\n\n\n\nexport const store = configureStore({\n    reducer: {\n        contacts: contactReducer,\n        filter: filterSlice.reducer\n  },\n  middleware: (getDefaultMiddleware) =>\n        getDefaultMiddleware({\n            serializableCheck: {\n                ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n            },\n        }),\n})\n\nexport const persistor = persistStore(store)"]},"metadata":{},"sourceType":"module"}