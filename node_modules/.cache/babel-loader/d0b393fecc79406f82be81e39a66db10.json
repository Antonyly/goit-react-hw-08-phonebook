{"ast":null,"code":"var _jsxFileName = \"/Users/antonlyzun/Desktop/GoIT/goit-react-hw-01-components/src/components/Statistics/Statistics.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './statistics.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction randomColor() {\n  return `#${Math.floor(Math.random() * 16777215).toString(16)}`;\n}\n\nconst Statistics = _ref => {\n  let {\n    title,\n    stats\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: css.statistics,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: css.title,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: css.list,\n      children: stats.map(el => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: css.item,\n        style: {\n          backgroundColor: randomColor()\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: css.label,\n          children: el.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"percentage\", {\n          className: css.percentage,\n          children: [el.percentage, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }, this)]\n      }, el.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Statistics;\nStatistics.propTypes = {\n  stats: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    percentage: PropTypes.number.isRequired\n  }))\n};\nexport default Statistics;\n\nvar _c;\n\n$RefreshReg$(_c, \"Statistics\");","map":{"version":3,"sources":["/Users/antonlyzun/Desktop/GoIT/goit-react-hw-01-components/src/components/Statistics/Statistics.jsx"],"names":["React","PropTypes","css","randomColor","Math","floor","random","toString","Statistics","title","stats","statistics","list","map","el","item","backgroundColor","label","percentage","id","propTypes","arrayOf","shape","string","isRequired","number"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,GAAP,MAAgB,yBAAhB;;;AAGA,SAASC,WAAT,GAAuB;AACrB,SAAQ,IAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,QAA3B,EAAqCC,QAArC,CAA8C,EAA9C,CAAkD,EAA7D;AACD;;AAED,MAAOC,UAAU,GAAG;AAAA,MAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD;AAAA,sBAChB;AAAS,IAAA,SAAS,EAAER,GAAG,CAACS,UAAxB;AAAA,4BACI;AAAI,MAAA,SAAS,EAAET,GAAG,CAACO,KAAnB;AAAA,gBAA4BA;AAA5B;AAAA;AAAA;AAAA;AAAA,YADJ,eAGJ;AAAI,MAAA,SAAS,EAAEP,GAAG,CAACU,IAAnB;AAAA,gBACOF,KAAK,CAACG,GAAN,CAAUC,EAAE,iBACT;AAAI,QAAA,SAAS,EAAEZ,GAAG,CAACa,IAAnB;AACF,QAAA,KAAK,EAAE;AACHC,UAAAA,eAAe,EAAEb,WAAW;AADzB,SADL;AAAA,gCAKF;AAAO,UAAA,SAAS,EAAED,GAAG,CAACe,KAAtB;AAAA,oBAA8BH,EAAE,CAACG;AAAjC;AAAA;AAAA;AAAA;AAAA,gBALE,eAMF;AAAY,UAAA,SAAS,EAAEf,GAAG,CAACgB,UAA3B;AAAA,qBAAwCJ,EAAE,CAACI,UAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,gBANE;AAAA,SAIGJ,EAAE,CAACK,EAJN;AAAA;AAAA;AAAA;AAAA,cADH;AADP;AAAA;AAAA;AAAA;AAAA,YAHI;AAAA;AAAA;AAAA;AAAA;AAAA,UADgB;AAAA,CAApB;;KAAOX,U;AAoBPA,UAAU,CAACY,SAAX,GAAuB;AACnBV,EAAAA,KAAK,EAAET,SAAS,CAACoB,OAAV,CACHpB,SAAS,CAACqB,KAAV,CAAgB;AACZH,IAAAA,EAAE,EAAElB,SAAS,CAACsB,MAAV,CAAiBC,UADT;AAEZP,IAAAA,KAAK,EAAEhB,SAAS,CAACsB,MAAV,CAAiBC,UAFZ;AAGZN,IAAAA,UAAU,EAAEjB,SAAS,CAACwB,MAAV,CAAiBD;AAHjB,GAAhB,CADG;AADY,CAAvB;AAWA,eAAehB,UAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './statistics.module.css';\n\n\nfunction randomColor() {\n  return `#${Math.floor(Math.random() * 16777215).toString(16)}`;\n}\n\nconst  Statistics = ({ title, stats }) => (\n    <section className={css.statistics}>\n        <h2 className={css.title}>{ title }</h2>\n\n<ul className={css.list}>\n      {stats.map(el => (\n          <li className={css.item}\n        style={{\n            backgroundColor: randomColor(),\n        }}\n        key={el.id}>\n        <label className={css.label}>{el.label}</label>\n        <percentage className={css.percentage}>{el.percentage}%</percentage>\n    </li>\n      ))}\n      </ul>\n\n        </section>\n);\n\nStatistics.propTypes = {\n    stats: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            label: PropTypes.string.isRequired,\n            percentage: PropTypes.number.isRequired,\n        }),\n    ),\n};\n\n\nexport default Statistics;"]},"metadata":{},"sourceType":"module"}