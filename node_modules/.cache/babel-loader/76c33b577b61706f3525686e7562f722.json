{"ast":null,"code":"var _jsxFileName = \"/Users/antonlyzun/Desktop/GoIT/goit-react-hw-08-phonebook/src/modules/LoginForm/LoginForm.jsx\",\n    _s = $RefreshSig$();\n\nimport PropTypes from \"prop-types\";\nimport useForm from \"../../shared/hooks/useForm\";\nimport { initialState } from \"./initialState\";\nimport { fields } from \"./fields\";\nimport TextField from \"../../shared/components/TextField\";\nimport Button from \"../../shared/components/Button\";\nimport s from \"./LoginForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = _ref => {\n  _s();\n\n  let {\n    onSubmit\n  } = _ref;\n  const {\n    state,\n    handleChange,\n    handleSubmit\n  } = useForm({\n    onSubmit,\n    initialState\n  });\n  const {\n    email,\n    password\n  } = state;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: s.form,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      value: email,\n      onChange: handleChange,\n      ...fields.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      value: password,\n      onChange: handleChange,\n      ...fields.password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginForm, \"QFvRye2JcF1CHQpEWTiIiH0Zxxg=\", false, function () {\n  return [useForm];\n});\n\n_c = LoginForm;\nLoginForm.defaultProps = {\n  onSubmit: () => {}\n};\nLoginForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired\n};\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/antonlyzun/Desktop/GoIT/goit-react-hw-08-phonebook/src/modules/LoginForm/LoginForm.jsx"],"names":["PropTypes","useForm","initialState","fields","TextField","Button","s","LoginForm","onSubmit","state","handleChange","handleSubmit","email","password","form","defaultProps","propTypes","func","isRequired"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,4BAApB;AAEA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,MAAT,QAAuB,UAAvB;AAEA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,CAAP,MAAc,wBAAd;;;AAEA,MAAMC,SAAS,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAClC,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,YAAT;AAAuBC,IAAAA;AAAvB,MAAwCV,OAAO,CAAC;AACpDO,IAAAA,QADoD;AAEpDN,IAAAA;AAFoD,GAAD,CAArD;AAKA,QAAM;AAAEU,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBJ,KAA5B;AAEA,sBACE;AAAM,IAAA,SAAS,EAAEH,CAAC,CAACQ,IAAnB;AAAyB,IAAA,QAAQ,EAAEH,YAAnC;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,KAAK,EAAEC,KAAlB;AAAyB,MAAA,QAAQ,EAAEF,YAAnC;AAAA,SAAqDP,MAAM,CAACS;AAA5D;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAW,MAAA,KAAK,EAAEC,QAAlB;AAA4B,MAAA,QAAQ,EAAEH,YAAtC;AAAA,SAAwDP,MAAM,CAACU;AAA/D;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAfD;;GAAMN,S;UAC0CN,O;;;KAD1CM,S;AAiBNA,SAAS,CAACQ,YAAV,GAAyB;AACvBP,EAAAA,QAAQ,EAAE,MAAM,CAAE;AADK,CAAzB;AAIAD,SAAS,CAACS,SAAV,GAAsB;AACpBR,EAAAA,QAAQ,EAAER,SAAS,CAACiB,IAAV,CAAeC;AADL,CAAtB;AAIA,eAAeX,SAAf","sourcesContent":["import PropTypes from \"prop-types\";\nimport useForm from \"../../shared/hooks/useForm\";\n\nimport { initialState } from \"./initialState\";\nimport { fields } from \"./fields\";\n\nimport TextField from \"../../shared/components/TextField\";\nimport Button from \"../../shared/components/Button\";\nimport s from \"./LoginForm.module.css\";\n\nconst LoginForm = ({ onSubmit }) => {\n  const { state, handleChange, handleSubmit } = useForm({\n    onSubmit,\n    initialState,\n  });\n\n  const { email, password } = state;\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <TextField value={email} onChange={handleChange} {...fields.email} />\n      <TextField value={password} onChange={handleChange} {...fields.password} />\n      <Button text=\"Login\" />\n    </form>\n  );\n};\n\nLoginForm.defaultProps = {\n  onSubmit: () => {},\n};\n\nLoginForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}