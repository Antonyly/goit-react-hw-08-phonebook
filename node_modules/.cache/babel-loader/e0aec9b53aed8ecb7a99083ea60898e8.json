{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { fetchContacts, removeContact, addContact } from \"./contacts-operations\";\nconst initialState = {\n  items: [],\n  loading: false,\n  error: null\n};\n\nconst panding = store => ({ ...store,\n  loading: true,\n  error: null\n});\n\nconst rejected = (store, _ref) => {\n  let {\n    payload\n  } = _ref;\n  return { ...store,\n    loading: false,\n    error: payload.message\n  };\n};\n\nconst contactsSlice = createSlice({\n  name: \"contacts\",\n  initialState,\n  extraReducers: {\n    [fetchContacts.pending]: panding,\n    [fetchContacts.fulfilled]: (store, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n      return { ...store,\n        loading: false,\n        items: payload\n      };\n    },\n    [fetchContacts.rejected]: rejected,\n    [addContact.pending]: panding,\n    [addContact.fulfilled]: (store, _ref3) => {\n      let {\n        payload\n      } = _ref3;\n      return { ...store,\n        loading: false,\n        items: [...store.items, payload]\n      };\n    },\n    [addContact.rejected]: rejected,\n    [removeContact.pending]: panding,\n    [removeContact.fulfilled]: (store, _ref4) => {\n      let {\n        payload\n      } = _ref4;\n      return { ...store,\n        loading: false,\n        items: store.items.filter(el => el.id !== payload)\n      };\n    },\n    [removeContact.rejected]: rejected\n  }\n});\nexport default contactsSlice.reducer;","map":{"version":3,"sources":["/Users/antonlyzun/Desktop/GoIT/goit-react-hw-08-phonebook/src/redux/contacts/contacts-slice.js"],"names":["createSlice","fetchContacts","removeContact","addContact","initialState","items","loading","error","panding","store","rejected","payload","message","contactsSlice","name","extraReducers","pending","fulfilled","filter","el","id","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,aAAT,EAAwBC,aAAxB,EAAuCC,UAAvC,QAAyD,uBAAzD;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,OAAO,EAAE,KAFU;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAArB;;AAMA,MAAMC,OAAO,GAAIC,KAAD,KAAY,EAC1B,GAAGA,KADuB;AAE1BH,EAAAA,OAAO,EAAE,IAFiB;AAG1BC,EAAAA,KAAK,EAAE;AAHmB,CAAZ,CAAhB;;AAMA,MAAMG,QAAQ,GAAG,CAACD,KAAD;AAAA,MAAQ;AAAEE,IAAAA;AAAF,GAAR;AAAA,SAAyB,EACxC,GAAGF,KADqC;AAExCH,IAAAA,OAAO,EAAE,KAF+B;AAGxCC,IAAAA,KAAK,EAAEI,OAAO,CAACC;AAHyB,GAAzB;AAAA,CAAjB;;AAMA,MAAMC,aAAa,GAAGb,WAAW,CAAC;AAChCc,EAAAA,IAAI,EAAE,UAD0B;AAEhCV,EAAAA,YAFgC;AAGhCW,EAAAA,aAAa,EAAE;AACb,KAACd,aAAa,CAACe,OAAf,GAAyBR,OADZ;AAEb,KAACP,aAAa,CAACgB,SAAf,GAA2B,CAACR,KAAD;AAAA,UAAQ;AAAEE,QAAAA;AAAF,OAAR;AAAA,aAAyB,EAClD,GAAGF,KAD+C;AAElDH,QAAAA,OAAO,EAAE,KAFyC;AAGlDD,QAAAA,KAAK,EAAEM;AAH2C,OAAzB;AAAA,KAFd;AAOb,KAACV,aAAa,CAACS,QAAf,GAA0BA,QAPb;AASb,KAACP,UAAU,CAACa,OAAZ,GAAsBR,OATT;AAUb,KAACL,UAAU,CAACc,SAAZ,GAAwB,CAACR,KAAD;AAAA,UAAQ;AAAEE,QAAAA;AAAF,OAAR;AAAA,aAAyB,EAC/C,GAAGF,KAD4C;AAE/CH,QAAAA,OAAO,EAAE,KAFsC;AAG/CD,QAAAA,KAAK,EAAE,CAAC,GAAGI,KAAK,CAACJ,KAAV,EAAiBM,OAAjB;AAHwC,OAAzB;AAAA,KAVX;AAeb,KAACR,UAAU,CAACO,QAAZ,GAAuBA,QAfV;AAiBb,KAACR,aAAa,CAACc,OAAf,GAAyBR,OAjBZ;AAkBb,KAACN,aAAa,CAACe,SAAf,GAA2B,CAACR,KAAD;AAAA,UAAQ;AAAEE,QAAAA;AAAF,OAAR;AAAA,aAAyB,EAClD,GAAGF,KAD+C;AAElDH,QAAAA,OAAO,EAAE,KAFyC;AAGlDD,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYa,MAAZ,CAAoBC,EAAD,IAAQA,EAAE,CAACC,EAAH,KAAUT,OAArC;AAH2C,OAAzB;AAAA,KAlBd;AAuBb,KAACT,aAAa,CAACQ,QAAf,GAA0BA;AAvBb;AAHiB,CAAD,CAAjC;AA8BA,eAAeG,aAAa,CAACQ,OAA7B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { fetchContacts, removeContact, addContact } from \"./contacts-operations\";\n\nconst initialState = {\n  items: [],\n  loading: false,\n  error: null\n};\n\nconst panding = (store) => ({\n  ...store,\n  loading: true,\n  error: null,\n});\n\nconst rejected = (store, { payload }) => ({\n  ...store,\n  loading: false,\n  error: payload.message,\n});\n\nconst contactsSlice = createSlice({\n  name: \"contacts\",\n  initialState,\n  extraReducers: {\n    [fetchContacts.pending]: panding,\n    [fetchContacts.fulfilled]: (store, { payload }) => ({\n      ...store,\n      loading: false,\n      items: payload,\n    }),\n    [fetchContacts.rejected]: rejected,\n\n    [addContact.pending]: panding,\n    [addContact.fulfilled]: (store, { payload }) => ({\n      ...store,\n      loading: false,\n      items: [...store.items, payload],\n    }),\n    [addContact.rejected]: rejected,\n\n    [removeContact.pending]: panding,\n    [removeContact.fulfilled]: (store, { payload }) => ({\n      ...store,\n      loading: false,\n      items: store.items.filter((el) => el.id !== payload),\n    }),\n    [removeContact.rejected]: rejected,\n  },\n});\n\nexport default contactsSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}