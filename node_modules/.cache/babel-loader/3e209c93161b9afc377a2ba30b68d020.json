{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst useForm = _ref => {\n  _s();\n\n  let {\n    onSubmit,\n    initialState,\n    isReset\n  } = _ref;\n  const [state, setState] = useState({ ...initialState\n  });\n\n  const handleChange = _ref2 => {\n    let {\n      target\n    } = _ref2;\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = target;\n    const newValue = type === \"checkbox\" ? checked : value;\n    setState(prevState => ({ ...prevState,\n      [name]: newValue\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state\n    }); // if (isReset) {\n\n    setState({ ...initialState\n    }); // }\n  };\n\n  return {\n    state,\n    setState,\n    handleChange,\n    handleSubmit\n  };\n};\n\n_s(useForm, \"LY96MlTrcn+KOVdUdEs4dYPepcQ=\");\n\nuseForm.defaultProps = {\n  onSubmit: () => {},\n  initialState: {},\n  isReset: true\n};\nuseForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  initialState: PropTypes.shape.isRequired,\n  isReset: PropTypes.bool.isRequired\n};\nexport default useForm;","map":{"version":3,"sources":["/Users/antonlyzun/Desktop/GoIT/goit-react-hw-08-phonebook/src/shared/hooks/useForm.js"],"names":["useState","PropTypes","useForm","onSubmit","initialState","isReset","state","setState","handleChange","target","name","value","type","checked","newValue","prevState","handleSubmit","e","preventDefault","defaultProps","propTypes","func","isRequired","shape","bool"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,OAAO,GAAG,QAAyC;AAAA;;AAAA,MAAxC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA;AAA1B,GAAwC;AACvD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAE,GAAGI;AAAL,GAAD,CAAlC;;AAEA,QAAMI,YAAY,GAAG,SAAgB;AAAA,QAAf;AAAEC,MAAAA;AAAF,KAAe;AACnC,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA,IAAf;AAAqBC,MAAAA;AAArB,QAAiCJ,MAAvC;AACA,UAAMK,QAAQ,GAAGF,IAAI,KAAK,UAAT,GAAsBC,OAAtB,GAAgCF,KAAjD;AACAJ,IAAAA,QAAQ,CAAEQ,SAAD,KAAgB,EACvB,GAAGA,SADoB;AAEvB,OAACL,IAAD,GAAQI;AAFe,KAAhB,CAAD,CAAR;AAID,GAPD;;AASA,QAAME,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACAf,IAAAA,QAAQ,CAAC,EAAE,GAAGG;AAAL,KAAD,CAAR,CAF0B,CAG1B;;AACEC,IAAAA,QAAQ,CAAC,EAAE,GAAGH;AAAL,KAAD,CAAR,CAJwB,CAK1B;AACD,GAND;;AAQA,SAAO;AAAEE,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA,YAAnB;AAAiCQ,IAAAA;AAAjC,GAAP;AACD,CArBD;;GAAMd,O;;AAuBNA,OAAO,CAACiB,YAAR,GAAuB;AACrBhB,EAAAA,QAAQ,EAAE,MAAM,CAAE,CADG;AAErBC,EAAAA,YAAY,EAAE,EAFO;AAGrBC,EAAAA,OAAO,EAAE;AAHY,CAAvB;AAMAH,OAAO,CAACkB,SAAR,GAAoB;AAClBjB,EAAAA,QAAQ,EAAEF,SAAS,CAACoB,IAAV,CAAeC,UADP;AAElBlB,EAAAA,YAAY,EAAEH,SAAS,CAACsB,KAAV,CAAgBD,UAFZ;AAGlBjB,EAAAA,OAAO,EAAEJ,SAAS,CAACuB,IAAV,CAAeF;AAHN,CAApB;AAMA,eAAepB,OAAf","sourcesContent":["import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst useForm = ({ onSubmit, initialState, isReset }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = ({ target }) => {\n    const { name, value, type, checked } = target;\n    const newValue = type === \"checkbox\" ? checked : value;\n    setState((prevState) => ({\n      ...prevState,\n      [name]: newValue,\n    }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    // if (isReset) {\n      setState({ ...initialState });\n    // }\n  };\n\n  return { state, setState, handleChange, handleSubmit };\n};\n\nuseForm.defaultProps = {\n  onSubmit: () => {},\n  initialState: {},\n  isReset: true,\n};\n\nuseForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  initialState: PropTypes.shape.isRequired,\n  isReset: PropTypes.bool.isRequired,\n};\n\nexport default useForm;\n"]},"metadata":{},"sourceType":"module"}