{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { nanoid } from \"nanoid\";\nexport const initialState = {\n  items: [],\n  filter: ''\n};\nconst contactsSlice = createSlice({\n  name: 'contacts',\n  initialState: initialState.items,\n  reducers: {\n    add: {\n      reducer(store, _ref) {\n        let {\n          payload\n        } = _ref;\n        return [payload, ...store];\n      },\n\n      prepare(data) {\n        return {\n          payload: { ...data,\n            id: nanoid()\n          }\n        };\n      }\n\n    },\n    remove: (state, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n      return state.filter(el => el.id !== payload);\n    }\n  }\n});\nexport const {\n  add,\n  remove\n} = contactsSlice.actions;\nexport default contactsSlice.reducer;","map":{"version":3,"sources":["/Users/antonlyzun/Desktop/GoIT/goit-react-hw-06-phonebook/src/redux/contacts/contacts.slice.js"],"names":["createSlice","nanoid","initialState","items","filter","contactsSlice","name","reducers","add","reducer","store","payload","prepare","data","id","remove","state","el","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,MAAT,QAAuB,QAAvB;AAEA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,KAAK,EAAE,EADmB;AAE1BC,EAAAA,MAAM,EAAE;AAFkB,CAArB;AAKP,MAAMC,aAAa,GAAGL,WAAW,CAAC;AAChCM,EAAAA,IAAI,EAAE,UAD0B;AAEhCJ,EAAAA,YAAY,EAAEA,YAAY,CAACC,KAFK;AAGhCI,EAAAA,QAAQ,EAAE;AACRC,IAAAA,GAAG,EAAE;AACHC,MAAAA,OAAO,CAACC,KAAD,QAAqB;AAAA,YAAb;AAAEC,UAAAA;AAAF,SAAa;AACtB,eAAO,CAACA,OAAD,EAAU,GAAGD,KAAb,CAAP;AACD,OAHF;;AAIHE,MAAAA,OAAO,CAACC,IAAD,EAAO;AACV,eAAO;AACHF,UAAAA,OAAO,EAAE,EAAE,GAAGE,IAAL;AAAWC,YAAAA,EAAE,EAAEb,MAAM;AAArB;AADN,SAAP;AAGC;;AARF,KADG;AAWRc,IAAAA,MAAM,EAAE,CAACC,KAAD,YAAwB;AAAA,UAAhB;AAAEL,QAAAA;AAAF,OAAgB;AAC5B,aAAOK,KAAK,CAACZ,MAAN,CAAaa,EAAE,IAAIA,EAAE,CAACH,EAAH,KAAUH,OAA7B,CAAP;AACD;AAbK;AAHsB,CAAD,CAAjC;AAmBA,OAAO,MAAM;AAAEH,EAAAA,GAAF;AAAOO,EAAAA;AAAP,IAAkBV,aAAa,CAACa,OAAtC;AACP,eAAeb,aAAa,CAACI,OAA7B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { nanoid } from \"nanoid\";\n\nexport const initialState = {\n  items: [],\n  filter: '',\n};\n\nconst contactsSlice = createSlice({\n  name: 'contacts',\n  initialState: initialState.items,\n  reducers: {\n    add: {\n      reducer(store, { payload }) {\n            return [payload, ...store];\n          },\n      prepare(data) {\n          return {\n              payload: { ...data, id: nanoid() },\n          };\n          },\n    },\n    remove: (state, { payload }) => {\n        return state.filter(el => el.id !== payload);\n      },\n    },\n});\nexport const { add, remove } = contactsSlice.actions;\nexport default contactsSlice.reducer;"]},"metadata":{},"sourceType":"module"}