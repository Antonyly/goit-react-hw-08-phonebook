{"ast":null,"code":"// import { configureStore } from \"@reduxjs/toolkit\";\n// import { contactsReducer } from './contactsSlice';\n// import { filterSlice } from './filterSlice';\n// import { persistStore,  FLUSH,\n//     REHYDRATE,\n//     PAUSE,\n//     PERSIST,\n//     PURGE,\n//     REGISTER, } from 'redux-persist';\n// export const store = configureStore({\n//     reducer: {\n//         contacts: contactsReducer,\n//         filter: filterSlice.reducer\n//     },\n//     middleware: (getDefaultMiddleware) =>\n//         getDefaultMiddleware({\n//             serializableCheck: {\n//                 ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n//             },\n//         }),\n// });\n// export const persistor = persistStore(store);\nimport { configureStore } from \"@reduxjs/toolkit\"; // import { createAction, createReducer } from '@reduxjs/toolkit'\n\nimport { contactsReducer } from './contactsSlice';\nimport { filterSlice } from './filterSlice';\nexport const store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n    filter: filterSlice.reducer\n  }\n});","map":{"version":3,"sources":["/Users/antonlyzun/Desktop/GoIT/goit-react-hw-07-phonebook/src/redux/store.js"],"names":["configureStore","contactsReducer","filterSlice","store","reducer","contacts","filter"],"mappings":"AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,SAASA,cAAT,QAA+B,kBAA/B,C,CACA;;AACA,SAASC,eAAT,QAAgC,iBAAhC;AACA,SAASC,WAAT,QAA4B,eAA5B;AAGA,OAAO,MAAMC,KAAK,GAAGH,cAAc,CAAC;AAChCI,EAAAA,OAAO,EAAE;AACLC,IAAAA,QAAQ,EAAEJ,eADL;AAELK,IAAAA,MAAM,EAAEJ,WAAW,CAACE;AAFf;AADuB,CAAD,CAA5B","sourcesContent":["// import { configureStore } from \"@reduxjs/toolkit\";\n// import { contactsReducer } from './contactsSlice';\n// import { filterSlice } from './filterSlice';\n\n// import { persistStore,  FLUSH,\n//     REHYDRATE,\n//     PAUSE,\n//     PERSIST,\n//     PURGE,\n//     REGISTER, } from 'redux-persist';\n\n\n\n// export const store = configureStore({\n//     reducer: {\n//         contacts: contactsReducer,\n//         filter: filterSlice.reducer\n//     },\n//     middleware: (getDefaultMiddleware) =>\n//         getDefaultMiddleware({\n//             serializableCheck: {\n//                 ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n//             },\n//         }),\n// });\n\n// export const persistor = persistStore(store);\nimport { configureStore } from \"@reduxjs/toolkit\";\n// import { createAction, createReducer } from '@reduxjs/toolkit'\nimport { contactsReducer } from './contactsSlice'\nimport { filterSlice } from './filterSlice'\n\n\nexport const store = configureStore({\n    reducer: {\n        contacts: contactsReducer,\n        filter: filterSlice.reducer\n  },\n  \n})\n"]},"metadata":{},"sourceType":"module"}