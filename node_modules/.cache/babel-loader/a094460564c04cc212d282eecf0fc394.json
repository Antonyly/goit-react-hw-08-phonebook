{"ast":null,"code":"var _jsxFileName = \"/Users/antonlyzun/Desktop/GoIT/goit-react-hw-07-phonebook/src/components/ContactsList/ContactList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { fetchContacts } from 'redux/operations';\nimport { ContactItem } from './ContactItem';\nimport s from './ContactList.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ContactList = () => {\n  _s();\n\n  const contacts = useSelector(state => state.contacts.items);\n  const isLoading = useSelector(state => state.contacts.isLoading);\n  const error = useSelector(state => state.contacts.error);\n  const filterValue = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  const filtredContacts = contacts === null || contacts === void 0 ? void 0 : contacts.filter(_ref => {\n    let {\n      name\n    } = _ref;\n    return name.toLowerCase().includes(filterValue.toLowerCase());\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isLoading === 'fetch' && /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 39\n    }, this), (error === null || error === void 0 ? void 0 : error.type) === 'fetch' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 41\n    }, this), contacts && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: s.contactsList,\n      children: filtredContacts === null || filtredContacts === void 0 ? void 0 : filtredContacts.map(_ref2 => {\n        let {\n          name,\n          phone,\n          id\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(ContactItem, {\n          name: name,\n          number: phone,\n          id: id\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ContactList, \"RF5+mTMjpnu5L4qmCfIDGf9e20s=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = ContactList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactList\");","map":{"version":3,"sources":["/Users/antonlyzun/Desktop/GoIT/goit-react-hw-07-phonebook/src/components/ContactsList/ContactList.js"],"names":["React","useEffect","useDispatch","useSelector","CircularProgress","fetchContacts","ContactItem","s","ContactList","contacts","state","items","isLoading","error","filterValue","filter","dispatch","filtredContacts","name","toLowerCase","includes","type","message","contactsList","map","phone","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAOC,CAAP,MAAc,0BAAd;;;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAC7B,QAAMC,QAAQ,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACD,QAAN,CAAeE,KAAzB,CAA5B;AACA,QAAMC,SAAS,GAAGT,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACD,QAAN,CAAeG,SAAzB,CAA7B;AACA,QAAMC,KAAK,GAAGV,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACD,QAAN,CAAeI,KAAzB,CAAzB;AAEA,QAAMC,WAAW,GAAGX,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACK,MAAhB,CAA/B;AACA,QAAMC,QAAQ,GAAGd,WAAW,EAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZe,IAAAA,QAAQ,CAACX,aAAa,EAAd,CAAR;AACH,GAFQ,EAEN,CAACW,QAAD,CAFM,CAAT;AAIA,QAAMC,eAAe,GAAGR,QAAH,aAAGA,QAAH,uBAAGA,QAAQ,CAAEM,MAAV,CAAiB;AAAA,QAAC;AAAEG,MAAAA;AAAF,KAAD;AAAA,WACzCA,IAAI,CAACC,WAAL,GAAmBC,QAAnB,CAA4BN,WAAW,CAACK,WAAZ,EAA5B,CADyC;AAAA,GAAjB,CAAxB;AAIA,sBACI;AAAA,eACKP,SAAS,KAAK,OAAd,iBAAyB,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,YAD9B,EAGK,CAAAC,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEQ,IAAP,MAAgB,OAAhB,iBAA2B;AAAA,gBAAMR,KAAK,CAACS;AAAZ;AAAA;AAAA;AAAA;AAAA,YAHhC,EAIKb,QAAQ,iBAAI;AAAI,MAAA,SAAS,EAAEF,CAAC,CAACgB,YAAjB;AAAA,gBACRN,eADQ,aACRA,eADQ,uBACRA,eAAe,CAAEO,GAAjB,CAAqB,SAAyB;AAAA,YAAxB;AAAEN,UAAAA,IAAF;AAAQO,UAAAA,KAAR;AAAeC,UAAAA;AAAf,SAAwB;AAC3C,4BAAO,QAAC,WAAD;AAAsB,UAAA,IAAI,EAAER,IAA5B;AAAkC,UAAA,MAAM,EAAEO,KAA1C;AAAiD,UAAA,EAAE,EAAEC;AAArD,WAAkBA,EAAlB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFA;AADQ;AAAA;AAAA;AAAA;AAAA,YAJjB;AAAA,kBADJ;AAYH,CA5BM;;GAAMlB,W;UACQL,W,EACCA,W,EACJA,W,EAEMA,W,EACHD,W;;;KANRM,W","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { fetchContacts } from 'redux/operations';\nimport  {ContactItem}  from './ContactItem';\nimport s from './ContactList.module.css';\n\nexport const ContactList = () => {\n    const contacts = useSelector(state => state.contacts.items);\n    const isLoading = useSelector(state => state.contacts.isLoading);       \n    const error = useSelector(state => state.contacts.error);       \n\n    const filterValue = useSelector(state => state.filter);\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(fetchContacts())\n    }, [dispatch])   \n\n    const filtredContacts = contacts?.filter(({ name }) =>\n    name.toLowerCase().includes(filterValue.toLowerCase())\n    );\n    \n    return (\n        <>\n            {isLoading === 'fetch' && <CircularProgress />}\n            \n            {error?.type === 'fetch' && <div>{error.message}</div>}        \n            {contacts && <ul className={s.contactsList}>\n                {filtredContacts?.map(({ name, phone, id }) => {\n                    return <ContactItem key={id} name={name} number={phone} id={id} />\n                })}\n            </ul>}\n        </>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}