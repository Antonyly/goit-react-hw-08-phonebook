{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { ContactForm } from './ContactForm/ContactForm';\nimport { ContactList } from './ContactList/ContactList';\nimport { Filter } from './Filter/Filter';\nimport css from './ContactForm/ContactForm.module.css';\nconst CONTACTS_KEY = 'Contact';\nexport const App = () => {\n  _s();\n\n  const [id, setId] = useState(() => {\n    const localStorageContacts = localStorage.getItem(CONTACTS_KEY);\n    return JSON.parse(localStorageContacts) || [];\n  });\n  const [filter, setFilter] = useState('');\n  useEffect(() => {\n    return localStorage.setItem(CONTACTS_KEY, JSON.stringify(id));\n  }, [id]);\n}; // export class App extends Component {\n//   state = {\n//     contacts: [\n//       { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n//       { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n//       { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n//       { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },],\n//     filter: ''\n//   }\n//     componentDidMount() {\n//     const savedContacts = localStorage.getItem(CONTACTS_KEY)\n//     if (savedContacts?.length > 0) {\n//       this.setState({\n//       contacts: JSON.parse(savedContacts)\n//     })\n//     }\n//   }\n//   componentDidUpdate(prevState) {\n//     const { contacts } = this.state\n//     if (prevState.contacts !== contacts) {\n//       localStorage.setItem(CONTACTS_KEY, JSON.stringify(contacts))\n//     }\n//   }\n//   isDuplicate = ({ name }) => {\n//     const { contacts } = this.state\n//     const result = contacts.find(contactItem => contactItem.name.toLowerCase() === name.toLowerCase())\n//     return result\n//   }\n//   addContact = (contactObject) => {\n//     if (this.isDuplicate(contactObject)) {\n//       return alert(`${contactObject.name} is alredy in contacts`)\n//     }\n//     return this.setState(prevState => ({\n//       contacts: [...prevState.contacts, contactObject],\n//     }))\n//   }\n//   handlerFilterChange = (e) => {\n//     this.setState({\n//       filter: e.currentTarget.value\n//     }) \n//   }\n//   deleteContact = (id) => {\n//     const { contacts } = this.state\n//     const newContacts = contacts.filter(contact => contact.id !== id)\n//     return this.setState({\n//       contacts: newContacts\n//     })    \n//   }\n//   render() {\n//     const { contacts, filter } = this.state\n//     const {addContact, handlerFilterChange, deleteContact} = this\n//     const filtredContacts = contacts.filter(({name}) => name.toLowerCase().includes(filter.toLowerCase()))\n//     return (\n//       <div className={ css.div}>\n//       <h1>Phonebook</h1>\n//       <ContactForm addContact={addContact} />\n//       <h2>Contacts</h2>\n//       <Filter value={filter} onChange={handlerFilterChange} />\n//       <ContactList contacts={filtredContacts} handleClick={deleteContact} />      \n//     </div>\n//   );\n//   }\n// };\n\n_s(App, \"t12IQTNy3bJfFpp5m5tmKvCdTr0=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/antonlyzun/Desktop/GoIT/goit-react-hw-04-phonebook/src/components/App.jsx"],"names":["useState","useEffect","ContactForm","ContactList","Filter","css","CONTACTS_KEY","App","id","setId","localStorageContacts","localStorage","getItem","JSON","parse","filter","setFilter","setItem","stringify"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,OAAOC,GAAP,MAAgB,sCAAhB;AAEA,MAAMC,YAAY,GAAG,SAArB;AAEA,OAAO,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,EAAD,EAAKC,KAAL,IAAcT,QAAQ,CAAC,MAAM;AACjC,UAAMU,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqBN,YAArB,CAA7B;AACA,WAAOO,IAAI,CAACC,KAAL,CAAWJ,oBAAX,KAAoC,EAA3C;AACD,GAH2B,CAA5B;AAIA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,WAAOU,YAAY,CAACM,OAAb,CAAqBX,YAArB,EAAmCO,IAAI,CAACK,SAAL,CAAeV,EAAf,CAAnC,CAAP;AACD,GAFQ,EAEN,CAACA,EAAD,CAFM,CAAT;AAGD,CAVM,C,CAYP;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;GAzFaD,G;;KAAAA,G","sourcesContent":["import {useState, useEffect} from \"react\";\nimport { ContactForm } from './ContactForm/ContactForm';\nimport { ContactList } from './ContactList/ContactList';\nimport { Filter } from './Filter/Filter';\nimport css from './ContactForm/ContactForm.module.css';\n\nconst CONTACTS_KEY = 'Contact';\n\nexport const App = () => {\n  const [id, setId] = useState(() => {\n    const localStorageContacts = localStorage.getItem(CONTACTS_KEY);\n    return JSON.parse(localStorageContacts) || [];\n  });\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    return localStorage.setItem(CONTACTS_KEY, JSON.stringify(id))\n  }, [id])\n};\n\n// export class App extends Component {\n\n//   state = {\n//     contacts: [\n//       { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n//       { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n//       { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n//       { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },],\n//     filter: ''\n//   }\n\n//     componentDidMount() {\n//     const savedContacts = localStorage.getItem(CONTACTS_KEY)\n\n//     if (savedContacts?.length > 0) {\n//       this.setState({\n//       contacts: JSON.parse(savedContacts)\n//     })\n//     }\n//   }\n  \n//   componentDidUpdate(prevState) {\n//     const { contacts } = this.state\n    \n//     if (prevState.contacts !== contacts) {\n//       localStorage.setItem(CONTACTS_KEY, JSON.stringify(contacts))\n//     }\n//   }\n\n//   isDuplicate = ({ name }) => {\n//     const { contacts } = this.state\n//     const result = contacts.find(contactItem => contactItem.name.toLowerCase() === name.toLowerCase())\n//     return result\n//   }\n\n//   addContact = (contactObject) => {\n//     if (this.isDuplicate(contactObject)) {\n//       return alert(`${contactObject.name} is alredy in contacts`)\n//     }\n\n//     return this.setState(prevState => ({\n//       contacts: [...prevState.contacts, contactObject],\n//     }))\n//   }\n\n//   handlerFilterChange = (e) => {\n//     this.setState({\n//       filter: e.currentTarget.value\n//     }) \n//   }\n\n//   deleteContact = (id) => {\n//     const { contacts } = this.state\n//     const newContacts = contacts.filter(contact => contact.id !== id)\n//     return this.setState({\n//       contacts: newContacts\n//     })    \n//   }\n \n\n//   render() {\n//     const { contacts, filter } = this.state\n//     const {addContact, handlerFilterChange, deleteContact} = this\n\n//     const filtredContacts = contacts.filter(({name}) => name.toLowerCase().includes(filter.toLowerCase()))\n    \n//     return (\n//       <div className={ css.div}>\n//       <h1>Phonebook</h1>\n//       <ContactForm addContact={addContact} />\n  \n//       <h2>Contacts</h2>\n//       <Filter value={filter} onChange={handlerFilterChange} />\n//       <ContactList contacts={filtredContacts} handleClick={deleteContact} />      \n//     </div>\n//   );\n//   }\n// };"]},"metadata":{},"sourceType":"module"}