{"ast":null,"code":"import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { getPhone, deletePhone, addPhone } from \"../../shared/services/api/contacts\";\nexport const fetchContacts = createAsyncThunk(\"contacts/fetch\", async (data, _ref) => {\n  let {\n    rejectWithValue\n  } = _ref;\n\n  try {\n    return await getPhone();\n  } catch (error) {\n    const {\n      data,\n      status\n    } = error.response;\n    const {\n      message\n    } = error;\n    const {\n      responseURL\n    } = error.response.request;\n    return rejectWithValue({\n      data,\n      status,\n      message,\n      responseURL\n    });\n  }\n});\nexport const removeContact = createAsyncThunk(\"contacts/remove\", async (data, _ref2) => {\n  let {\n    rejectWithValue\n  } = _ref2;\n\n  try {\n    return await deletePhone(data);\n  } catch (error) {\n    const {\n      data,\n      status\n    } = error.response;\n    const {\n      message\n    } = error;\n    const {\n      responseURL\n    } = error.response.request;\n    return rejectWithValue({\n      data,\n      status,\n      message,\n      responseURL\n    });\n  }\n});\nexport const addContact = createAsyncThunk(\"contacts/add\", async (data, _ref3) => {\n  let {\n    rejectWithValue\n  } = _ref3;\n\n  try {\n    return addPhone(data);\n  } catch (error) {\n    const {\n      data,\n      status\n    } = error.response;\n    const {\n      message\n    } = error;\n    const {\n      responseURL\n    } = error.response.request;\n    return rejectWithValue({\n      data,\n      status,\n      message,\n      responseURL\n    });\n  }\n}, {\n  condition: (data, _ref4) => {\n    let {\n      getState\n    } = _ref4;\n    const {\n      contacts\n    } = getState();\n    const isAdded = contacts.items.find(el => el.name.toLowerCase() === data.name.toLowerCase());\n\n    if (isAdded) {\n      alert(`\"${isAdded.name}\" is already in your contacts`);\n      return false;\n    }\n  }\n});","map":{"version":3,"sources":["/Users/antonlyzun/Desktop/GoIT/goit-react-hw-08-phonebook/src/redux/contacts/contacts-operations.js"],"names":["createAsyncThunk","getPhone","deletePhone","addPhone","fetchContacts","data","rejectWithValue","error","status","response","message","responseURL","request","removeContact","addContact","condition","getState","contacts","isAdded","items","find","el","name","toLowerCase","alert"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,kBAAjC;AACA,SACEC,QADF,EAEEC,WAFF,EAGEC,QAHF,QAIO,oCAJP;AAMA,OAAO,MAAMC,aAAa,GAAGJ,gBAAgB,CAC3C,gBAD2C,EAE3C,OAAOK,IAAP,WAAqC;AAAA,MAAxB;AAAEC,IAAAA;AAAF,GAAwB;;AACnC,MAAI;AACF,WAAO,MAAML,QAAQ,EAArB;AACD,GAFD,CAEE,OAAOM,KAAP,EAAc;AACd,UAAM;AAAEF,MAAAA,IAAF;AAAQG,MAAAA;AAAR,QAAmBD,KAAK,CAACE,QAA/B;AACE,UAAM;AAACC,MAAAA;AAAD,QAAYH,KAAlB;AACA,UAAM;AAACI,MAAAA;AAAD,QAAeJ,KAAK,CAACE,QAAN,CAAeG,OAApC;AACA,WAAON,eAAe,CAAC;AAAED,MAAAA,IAAF;AAAQG,MAAAA,MAAR;AAAgBE,MAAAA,OAAhB;AAAwBC,MAAAA;AAAxB,KAAD,CAAtB;AACH;AACF,CAX0C,CAAtC;AAcP,OAAO,MAAME,aAAa,GAAGb,gBAAgB,CAC3C,iBAD2C,EAE3C,OAAOK,IAAP,YAAqC;AAAA,MAAxB;AAAEC,IAAAA;AAAF,GAAwB;;AACnC,MAAI;AACF,WAAO,MAAMJ,WAAW,CAACG,IAAD,CAAxB;AACD,GAFD,CAEE,OAAOE,KAAP,EAAc;AACd,UAAM;AAAEF,MAAAA,IAAF;AAAQG,MAAAA;AAAR,QAAmBD,KAAK,CAACE,QAA/B;AACE,UAAM;AAACC,MAAAA;AAAD,QAAYH,KAAlB;AACA,UAAM;AAACI,MAAAA;AAAD,QAAeJ,KAAK,CAACE,QAAN,CAAeG,OAApC;AACA,WAAON,eAAe,CAAC;AAAED,MAAAA,IAAF;AAAQG,MAAAA,MAAR;AAAgBE,MAAAA,OAAhB;AAAwBC,MAAAA;AAAxB,KAAD,CAAtB;AACH;AACF,CAX0C,CAAtC;AAcP,OAAO,MAAMG,UAAU,GAAGd,gBAAgB,CACxC,cADwC,EAExC,OAAOK,IAAP,YAAqC;AAAA,MAAxB;AAAEC,IAAAA;AAAF,GAAwB;;AACnC,MAAI;AACF,WAAOH,QAAQ,CAACE,IAAD,CAAf;AACD,GAFD,CAEE,OAAOE,KAAP,EAAc;AACd,UAAM;AAAEF,MAAAA,IAAF;AAAQG,MAAAA;AAAR,QAAmBD,KAAK,CAACE,QAA/B;AACE,UAAM;AAACC,MAAAA;AAAD,QAAYH,KAAlB;AACA,UAAM;AAACI,MAAAA;AAAD,QAAeJ,KAAK,CAACE,QAAN,CAAeG,OAApC;AACA,WAAON,eAAe,CAAC;AAAED,MAAAA,IAAF;AAAQG,MAAAA,MAAR;AAAgBE,MAAAA,OAAhB;AAAwBC,MAAAA;AAAxB,KAAD,CAAtB;AACH;AACF,CAXuC,EAYxC;AACEI,EAAAA,SAAS,EAAE,CAACV,IAAD,YAAwB;AAAA,QAAjB;AAAEW,MAAAA;AAAF,KAAiB;AACjC,UAAM;AAAEC,MAAAA;AAAF,QAAeD,QAAQ,EAA7B;AACA,UAAME,OAAO,GAAGD,QAAQ,CAACE,KAAT,CAAeC,IAAf,CACbC,EAAD,IAAQA,EAAE,CAACC,IAAH,CAAQC,WAAR,OAA0BlB,IAAI,CAACiB,IAAL,CAAUC,WAAV,EADpB,CAAhB;;AAGA,QAAIL,OAAJ,EAAa;AACXM,MAAAA,KAAK,CAAE,IAAGN,OAAO,CAACI,IAAK,+BAAlB,CAAL;AACA,aAAO,KAAP;AACD;AACF;AAVH,CAZwC,CAAnC","sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport {\n  getPhone,\n  deletePhone,\n  addPhone,\n} from \"../../shared/services/api/contacts\";\n\nexport const fetchContacts = createAsyncThunk(\n  \"contacts/fetch\",\n  async (data, { rejectWithValue }) => {\n    try {\n      return await getPhone();\n    } catch (error) {\n      const { data, status } = error.response;\n        const {message} = error;\n        const {responseURL}= error.response.request;\n        return rejectWithValue({ data, status, message,responseURL });\n    }\n  }\n);\n\nexport const removeContact = createAsyncThunk(\n  \"contacts/remove\",\n  async (data, { rejectWithValue }) => {\n    try {\n      return await deletePhone(data);\n    } catch (error) {\n      const { data, status } = error.response;\n        const {message} = error;\n        const {responseURL}= error.response.request;\n        return rejectWithValue({ data, status, message,responseURL });\n    }\n  }\n);\n\nexport const addContact = createAsyncThunk(\n  \"contacts/add\",\n  async (data, { rejectWithValue }) => {\n    try {\n      return addPhone(data);\n    } catch (error) {\n      const { data, status } = error.response;\n        const {message} = error;\n        const {responseURL}= error.response.request;\n        return rejectWithValue({ data, status, message,responseURL });\n    }\n  },\n  {\n    condition: (data, { getState }) => {\n      const { contacts } = getState();\n      const isAdded = contacts.items.find(\n        (el) => el.name.toLowerCase() === data.name.toLowerCase()\n      );\n      if (isAdded) {\n        alert(`\"${isAdded.name}\" is already in your contacts`);\n        return false;\n      } \n    },\n  }\n);\n"]},"metadata":{},"sourceType":"module"}