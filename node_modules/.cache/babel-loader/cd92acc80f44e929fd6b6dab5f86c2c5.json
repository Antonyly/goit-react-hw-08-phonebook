{"ast":null,"code":"var _jsxFileName = \"/Users/antonlyzun/Desktop/GoIT/goit-react-hw-01-components/src/components/FriendList/FriendList.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './friendList.module.css'; // const FriendList = ({ friends }) => (\n//     <ul className={css.friend_list}>\n//         {friends.map(friend => (\n//             <li className={css.item} key={friend.id}>\n//                 <span className={friend.isOnline ? css.statusOnline : css.statusOffline}></span>\n//                 <img className={css.avatar} src={friend.avatar} alt={friend.avatar} width=\"50\" />\n//                 <p className={css.name}>{friend.name}</p>\n//             </li>\n//         ))}\n//     </ul>\n// );\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const FriendListItem = _ref => {\n  let {\n    avatar,\n    name,\n    isOnline\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Status, {\n      isOnline: isOnline\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: avatar,\n      alt: \"User avatar\",\n      width: \"48\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: name\n    }, void 0, false)]\n  }, void 0, true);\n};\n_c = FriendListItem;\nexport const FriendList = _ref2 => {\n  let {\n    friends\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: friends.map(friend => /*#__PURE__*/_jsxDEV(FriendListItem, {\n      avatar: friend.avatar,\n      name: friend.name,\n      isOnline: friend.isOnline\n    }, friend.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\n_c2 = FriendList;\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    avatar: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    isOnline: PropTypes.bool.isRequired\n  }))\n};\nexport default FriendList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FriendListItem\");\n$RefreshReg$(_c2, \"FriendList\");","map":{"version":3,"sources":["/Users/antonlyzun/Desktop/GoIT/goit-react-hw-01-components/src/components/FriendList/FriendList.jsx"],"names":["React","PropTypes","css","FriendListItem","avatar","name","isOnline","FriendList","friends","map","friend","id","propTypes","arrayOf","shape","number","isRequired","string","bool"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,GAAP,MAAgB,yBAAhB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA,OAAO,MAAMC,cAAc,GAAG,QAAgC;AAAA,MAA/B;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,IAAV;AAAgBC,IAAAA;AAAhB,GAA+B;AAC1D,sBAAO;AAAA,4BACK,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA,YADL,eAEK;AAAK,MAAA,GAAG,EAAEF,MAAV;AAAkB,MAAA,GAAG,EAAC,aAAtB;AAAoC,MAAA,KAAK,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,YAFL,eAGK;AAAA,gBAAGC;AAAH,qBAHL;AAAA,kBAAP;AAKH,CANM;KAAMF,c;AAQb,OAAO,MAAMI,UAAU,GAAG,SAAiB;AAAA,MAAhB;AAAEC,IAAAA;AAAF,GAAgB;AACvC,sBAAQ;AAAA,cAAGA,OAAO,CAACC,GAAR,CAAYC,MAAM,iBACzB,QAAC,cAAD;AAEI,MAAA,MAAM,EAAEA,MAAM,CAACN,MAFnB;AAGI,MAAA,IAAI,EAAEM,MAAM,CAACL,IAHjB;AAII,MAAA,QAAQ,EAAEK,MAAM,CAACJ;AAJrB,OACSI,MAAM,CAACC,EADhB;AAAA;AAAA;AAAA;AAAA,YADO;AAAH,mBAAR;AAUH,CAXM;MAAMJ,U;AAabA,UAAU,CAACK,SAAX,GAAuB;AACnBJ,EAAAA,OAAO,EAAEP,SAAS,CAACY,OAAV,CACLZ,SAAS,CAACa,KAAV,CAAgB;AACZH,IAAAA,EAAE,EAAEV,SAAS,CAACc,MAAV,CAAiBC,UADT;AAEZZ,IAAAA,MAAM,EAAEH,SAAS,CAACgB,MAAV,CAAiBD,UAFb;AAGZX,IAAAA,IAAI,EAAEJ,SAAS,CAACgB,MAAV,CAAiBD,UAHX;AAIZV,IAAAA,QAAQ,EAAEL,SAAS,CAACiB,IAAV,CAAeF;AAJb,GAAhB,CADK;AADU,CAAvB;AAWA,eAAeT,UAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './friendList.module.css';\n\n// const FriendList = ({ friends }) => (\n//     <ul className={css.friend_list}>\n//         {friends.map(friend => (\n//             <li className={css.item} key={friend.id}>\n//                 <span className={friend.isOnline ? css.statusOnline : css.statusOffline}></span>\n//                 <img className={css.avatar} src={friend.avatar} alt={friend.avatar} width=\"50\" />\n//                 <p className={css.name}>{friend.name}</p>\n//             </li>\n//         ))}\n//     </ul>\n// );\nexport const FriendListItem = ({ avatar, name, isOnline }) => {\n    return <>\n                <Status isOnline={isOnline} />\n                <img src={avatar} alt=\"User avatar\" width=\"48\" />\n                <>{name}</>\n            </>\n}\n\nexport const FriendList = ({ friends }) => {\n    return (<>{friends.map(friend => (\n        <FriendListItem\n            key={friend.id}\n            avatar={friend.avatar}\n            name={friend.name}\n            isOnline={friend.isOnline}\n            />\n        ))}\n    </>\n    );\n}\n\nFriendList.propTypes = {\n    friends: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            avatar: PropTypes.string.isRequired,\n            name: PropTypes.string.isRequired,\n            isOnline: PropTypes.bool.isRequired,\n        }),\n    ),\n};\n\nexport default FriendList;"]},"metadata":{},"sourceType":"module"}