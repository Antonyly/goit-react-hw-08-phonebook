{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\"; // import storage from 'redux-persist/lib/storage';\n// import { persistReducer } from 'redux-persist';\n\nimport { fetchContacts, deleteContact, addContact } from \"./operations\";\nconst contactsSlice = createSlice({\n  name: 'contactsState',\n  initialState: {\n    contacts: [],\n    isLoading: false,\n    isAdding: false,\n    error: null\n  },\n  reducers: {\n    [fetchContacts.pending](state) {\n      state.isLoading = 'fetch';\n    }\n\n  }\n}); // const persistConfig = {\n//     key: 'root',\n//     storage,\n// };\n// export const contactsReducer = persistReducer(persistConfig, contactsSlice.reducer);\n// export const { addContact, deleteContact } = contactsSlice.actions;","map":{"version":3,"sources":["/Users/antonlyzun/Desktop/GoIT/goit-react-hw-07-phonebook/src/redux/contactsSlice.js"],"names":["createSlice","fetchContacts","deleteContact","addContact","contactsSlice","name","initialState","contacts","isLoading","isAdding","error","reducers","pending","state"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B,C,CACA;AACA;;AAEA,SAASC,aAAT,EAAwBC,aAAxB,EAAuCC,UAAvC,QAAwD,cAAxD;AAGA,MAAMC,aAAa,GAAGJ,WAAW,CAAC;AAC9BK,EAAAA,IAAI,EAAE,eADwB;AAE9BC,EAAAA,YAAY,EAAE;AACVC,IAAAA,QAAQ,EAAE,EADA;AAEVC,IAAAA,SAAS,EAAE,KAFD;AAGVC,IAAAA,QAAQ,EAAE,KAHA;AAIVC,IAAAA,KAAK,EAAE;AAJG,GAFgB;AAQ9BC,EAAAA,QAAQ,EAAE;AACN,KAACV,aAAa,CAACW,OAAf,EAAwBC,KAAxB,EAA+B;AAC3BA,MAAAA,KAAK,CAACL,SAAN,GAAkB,OAAlB;AACH;;AAHK;AARoB,CAAD,CAAjC,C,CAeA;AACA;AACA;AACA;AAEA;AAEA","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n// import storage from 'redux-persist/lib/storage';\n// import { persistReducer } from 'redux-persist';\n\nimport { fetchContacts, deleteContact, addContact} from \"./operations\";\n\n\nconst contactsSlice = createSlice({\n    name: 'contactsState',\n    initialState: {\n        contacts: [],\n        isLoading: false,\n        isAdding: false,\n        error: null,\n    },\n    reducers: {\n        [fetchContacts.pending](state) {\n            state.isLoading = 'fetch'\n        }\n    },\n});\n\n// const persistConfig = {\n//     key: 'root',\n//     storage,\n// };\n\n// export const contactsReducer = persistReducer(persistConfig, contactsSlice.reducer);\n\n// export const { addContact, deleteContact } = contactsSlice.actions;"]},"metadata":{},"sourceType":"module"}