{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { fetchContacts, deleteContact, addContact } from \"./operations\";\nconst contactsSlice = createSlice({\n  name: 'contacts',\n  initialState: {\n    items: [],\n    isLoading: false,\n    isAdding: false,\n    error: null\n  },\n  reducers: {\n    [fetchContacts.pending](state) {\n      state.isLoading = 'fetch';\n    },\n\n    [fetchContacts.fulfilled](state, _ref) {\n      let {\n        payload\n      } = _ref;\n      state.isLoading = false;\n      state.error = null;\n      state.items = payload;\n    },\n\n    [fetchContacts.rejected](state, _ref2) {\n      let {\n        payload\n      } = _ref2;\n      state.isLoading = false;\n      state.error = {\n        type: 'fetch',\n        message: payload\n      };\n    },\n\n    [deleteContact.pending](state, action) {\n      state.isLoading = action.meta.arg;\n    },\n\n    [deleteContact.fulfilled](state, _ref3) {\n      let {\n        payload\n      } = _ref3;\n      state.isLoading = false;\n      state.error = null;\n      state.items = state.items.filter(item => item.id !== payload.id);\n    },\n\n    [deleteContact.rejected](state, action) {\n      state.isLoading = false;\n      state.error = {\n        id: action.meta.arg,\n        message: action.payload\n      };\n    },\n\n    [addContact.pending](state) {\n      state.isLoading = 'add';\n    },\n\n    [addContact.fulfilled](state, _ref4) {\n      let {\n        payload\n      } = _ref4;\n      state.isLoading = false;\n      state.error = null;\n      state.items.push(payload);\n    },\n\n    [addContact.rejected](state, _ref5) {\n      let {\n        payload\n      } = _ref5;\n      state.isLoading = false;\n      state.error = {\n        type: 'add',\n        message: payload\n      };\n    }\n\n  }\n});\nexport const contactsReducer = contactsSlice.reducer;","map":{"version":3,"sources":["/Users/antonlyzun/Desktop/GoIT/goit-react-hw-07-phonebook/src/redux/contactsSlice.js"],"names":["createSlice","fetchContacts","deleteContact","addContact","contactsSlice","name","initialState","items","isLoading","isAdding","error","reducers","pending","state","fulfilled","payload","rejected","type","message","action","meta","arg","filter","item","id","push","contactsReducer","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { fetchContacts, deleteContact, addContact} from \"./operations\";\n\n\n\nconst contactsSlice = createSlice({\n    name: 'contacts',\n    initialState: {       \n        items: [],\n        isLoading: false,\n        isAdding: false,\n        error: null        \n    },\n\n    reducers: {\n        [fetchContacts.pending](state) {            \n            state.isLoading = 'fetch'\n        },\n        [fetchContacts.fulfilled](state, { payload }) {\n            state.isLoading = false\n            state.error = null\n            state.items = payload\n        },\n        [fetchContacts.rejected](state, { payload }) {\n            state.isLoading = false\n            state.error = {type: 'fetch', message: payload}\n        },\n\n        \n        [deleteContact.pending](state, action) { \n            state.isLoading = action.meta.arg\n        },\n        [deleteContact.fulfilled](state, { payload }) {\n            state.isLoading = false\n            state.error = null\n            state.items = state.items.filter(item => item.id !== payload.id )                        \n        },\n        [deleteContact.rejected](state, action) {\n            state.isLoading = false\n            state.error = {id: action.meta.arg, message: action.payload}\n        },\n        \n\n        [addContact.pending](state) {            \n            state.isLoading = 'add'\n        },\n        [addContact.fulfilled](state, { payload }) {\n            state.isLoading = false\n            state.error = null\n            state.items.push(payload)                        \n        },\n        [addContact.rejected](state, { payload }) {\n            state.isLoading = false\n            state.error = {type: 'add', message: payload}\n        }\n     }\n    \n})\n\nexport const contactsReducer = contactsSlice.reducer;"]},"metadata":{},"sourceType":"module"}