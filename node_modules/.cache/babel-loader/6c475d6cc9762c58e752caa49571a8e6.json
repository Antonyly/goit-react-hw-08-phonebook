{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport storage from 'redux-persist/lib/storage';\nimport { persistReducer } from 'redux-persist';\nconst contactsSlice = createSlice({\n  name: 'contactsState',\n  initialState: {\n    contacts: [],\n    isLoading: false,\n    isAdding: false,\n    error: null\n  },\n  reducers: {\n    addContact(state, _ref) {\n      let {\n        payload\n      } = _ref;\n      state.contacts.push(payload);\n    },\n\n    deleteContact(state, _ref2) {\n      let {\n        payload\n      } = _ref2;\n      return {\n        contacts: state.contacts.filter(contact => contact.id !== payload)\n      };\n    }\n\n  }\n});\nconst persistConfig = {\n  key: 'root',\n  storage\n};\nexport const contactsReducer = persistReducer(persistConfig, contactsSlice.reducer);\nexport const {\n  addContact,\n  deleteContact\n} = contactsSlice.actions;","map":{"version":3,"sources":["/Users/antonlyzun/Desktop/GoIT/goit-react-hw-07-phonebook/src/redux/contactsSlice.js"],"names":["createSlice","storage","persistReducer","contactsSlice","name","initialState","contacts","isLoading","isAdding","error","reducers","addContact","state","payload","push","deleteContact","filter","contact","id","persistConfig","key","contactsReducer","reducer","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,cAAT,QAA+B,eAA/B;AAGA,MAAMC,aAAa,GAAGH,WAAW,CAAC;AAC9BI,EAAAA,IAAI,EAAE,eADwB;AAE9BC,EAAAA,YAAY,EAAE;AACVC,IAAAA,QAAQ,EAAE,EADA;AAEVC,IAAAA,SAAS,EAAE,KAFD;AAGVC,IAAAA,QAAQ,EAAE,KAHA;AAIVC,IAAAA,KAAK,EAAE;AAJG,GAFgB;AAQ9BC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,UAAU,CAACC,KAAD,QAAqB;AAAA,UAAb;AAAEC,QAAAA;AAAF,OAAa;AAC3BD,MAAAA,KAAK,CAACN,QAAN,CAAeQ,IAAf,CAAoBD,OAApB;AACH,KAHK;;AAINE,IAAAA,aAAa,CAACH,KAAD,SAAqB;AAAA,UAAb;AAAEC,QAAAA;AAAF,OAAa;AAC9B,aAAO;AACHP,QAAAA,QAAQ,EAAEM,KAAK,CAACN,QAAN,CAAeU,MAAf,CAAuBC,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeL,OAAjD;AADP,OAAP;AAGH;;AARK;AARoB,CAAD,CAAjC;AAoBA,MAAMM,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,MADa;AAElBnB,EAAAA;AAFkB,CAAtB;AAKA,OAAO,MAAMoB,eAAe,GAAGnB,cAAc,CAACiB,aAAD,EAAgBhB,aAAa,CAACmB,OAA9B,CAAtC;AAEP,OAAO,MAAM;AAAEX,EAAAA,UAAF;AAAcI,EAAAA;AAAd,IAAgCZ,aAAa,CAACoB,OAApD","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport storage from 'redux-persist/lib/storage';\nimport { persistReducer } from 'redux-persist';\n\n\nconst contactsSlice = createSlice({\n    name: 'contactsState',\n    initialState: {\n        contacts: [],\n        isLoading: false,\n        isAdding: false,\n        error: null,\n    },\n    reducers: {\n        addContact(state, { payload }) {\n            state.contacts.push(payload)\n        },\n        deleteContact(state, { payload }) {\n            return {\n                contacts: state.contacts.filter((contact => contact.id !== payload))\n            };\n        },\n    },\n});\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n};\n\nexport const contactsReducer = persistReducer(persistConfig, contactsSlice.reducer);\n\nexport const { addContact, deleteContact } = contactsSlice.actions;"]},"metadata":{},"sourceType":"module"}