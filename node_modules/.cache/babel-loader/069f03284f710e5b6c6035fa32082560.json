{"ast":null,"code":"var _jsxFileName = \"/Users/antonlyzun/Desktop/GoIT/goit-react-hw-08-phonebook/src/shared/components/TextField/TextField.jsx\",\n    _s = $RefreshSig$();\n\nimport { nanoid } from \"@reduxjs/toolkit\";\nimport { useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./TextField.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TextField = props => {\n  _s();\n\n  const {\n    label,\n    name,\n    value,\n    onChange,\n    placeholder,\n    required,\n    type,\n    pattern,\n    title\n  } = props;\n  const id = useMemo(() => nanoid(), []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.wrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: id,\n      className: s.label,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: onChange,\n      id: id,\n      className: s.input,\n      type: type,\n      name: name,\n      value: value,\n      placeholder: placeholder,\n      required: required,\n      pattern: pattern,\n      title: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TextField, \"q3CFjgMQLlJf2igORYY5iC/scmo=\");\n\n_c = TextField;\nTextField.defaultProps = {\n  type: \"text\",\n  required: false,\n  onChange: () => {}\n};\nTextField.propTypes = {\n  type: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  required: PropTypes.bool.isRequired,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]).isRequired,\n  placeholder: PropTypes.string,\n  pattern: PropTypes.string,\n  title: PropTypes.string\n};\nexport default TextField;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextField\");","map":{"version":3,"sources":["/Users/antonlyzun/Desktop/GoIT/goit-react-hw-08-phonebook/src/shared/components/TextField/TextField.jsx"],"names":["nanoid","useMemo","PropTypes","s","TextField","props","label","name","value","onChange","placeholder","required","type","pattern","title","id","wrapper","input","defaultProps","propTypes","string","isRequired","func","bool","oneOfType","number"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,kBAAvB;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,CAAP,MAAc,wBAAd;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAM;AACJC,IAAAA,KADI;AAEJC,IAAAA,IAFI;AAGJC,IAAAA,KAHI;AAIJC,IAAAA,QAJI;AAKJC,IAAAA,WALI;AAMJC,IAAAA,QANI;AAOJC,IAAAA,IAPI;AAQJC,IAAAA,OARI;AASJC,IAAAA;AATI,MAUFT,KAVJ;AAYA,QAAMU,EAAE,GAAGd,OAAO,CAAC,MAAMD,MAAM,EAAb,EAAiB,EAAjB,CAAlB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAEG,CAAC,CAACa,OAAlB;AAAA,4BACE;AAAO,MAAA,OAAO,EAAED,EAAhB;AAAoB,MAAA,SAAS,EAAEZ,CAAC,CAACG,KAAjC;AAAA,gBACGA;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AACE,MAAA,QAAQ,EAAEG,QADZ;AAEE,MAAA,EAAE,EAAEM,EAFN;AAGE,MAAA,SAAS,EAAEZ,CAAC,CAACc,KAHf;AAIE,MAAA,IAAI,EAAEL,IAJR;AAKE,MAAA,IAAI,EAAEL,IALR;AAME,MAAA,KAAK,EAAEC,KANT;AAOE,MAAA,WAAW,EAAEE,WAPf;AAQE,MAAA,QAAQ,EAAEC,QARZ;AASE,MAAA,OAAO,EAAEE,OATX;AAUE,MAAA,KAAK,EAAEC;AAVT;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAlCD;;GAAMV,S;;KAAAA,S;AAmCNA,SAAS,CAACc,YAAV,GAAyB;AACvBN,EAAAA,IAAI,EAAE,MADiB;AAEvBD,EAAAA,QAAQ,EAAE,KAFa;AAGvBF,EAAAA,QAAQ,EAAE,MAAM,CAAE;AAHK,CAAzB;AAMAL,SAAS,CAACe,SAAV,GAAsB;AACpBP,EAAAA,IAAI,EAAEV,SAAS,CAACkB,MAAV,CAAiBC,UADH;AAEpBd,EAAAA,IAAI,EAAEL,SAAS,CAACkB,MAAV,CAAiBC,UAFH;AAGpBZ,EAAAA,QAAQ,EAAEP,SAAS,CAACoB,IAAV,CAAeD,UAHL;AAIpBV,EAAAA,QAAQ,EAAET,SAAS,CAACqB,IAAV,CAAeF,UAJL;AAKpBb,EAAAA,KAAK,EAAEN,SAAS,CAACsB,SAAV,CAAoB,CACzBtB,SAAS,CAACkB,MADe,EAEzBlB,SAAS,CAACuB,MAFe,EAGzBvB,SAAS,CAACqB,IAHe,CAApB,EAIJF,UATiB;AAUpBX,EAAAA,WAAW,EAAER,SAAS,CAACkB,MAVH;AAWpBP,EAAAA,OAAO,EAAEX,SAAS,CAACkB,MAXC;AAYpBN,EAAAA,KAAK,EAAEZ,SAAS,CAACkB;AAZG,CAAtB;AAeA,eAAehB,SAAf","sourcesContent":["import { nanoid } from \"@reduxjs/toolkit\";\nimport { useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport s from \"./TextField.module.css\";\n\nconst TextField = (props) => {\n  const {\n    label,\n    name,\n    value,\n    onChange,\n    placeholder,\n    required,\n    type,\n    pattern,\n    title,\n  } = props;\n\n  const id = useMemo(() => nanoid(), []);\n\n  return (\n    <div className={s.wrapper}>\n      <label htmlFor={id} className={s.label}>\n        {label}\n      </label>\n      <input\n        onChange={onChange}\n        id={id}\n        className={s.input}\n        type={type}\n        name={name}\n        value={value}\n        placeholder={placeholder}\n        required={required}\n        pattern={pattern}\n        title={title}\n      />\n    </div>\n  );\n};\nTextField.defaultProps = {\n  type: \"text\",\n  required: false,\n  onChange: () => {},\n};\n\nTextField.propTypes = {\n  type: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  required: PropTypes.bool.isRequired,\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.bool,\n  ]).isRequired,\n  placeholder: PropTypes.string,\n  pattern: PropTypes.string,\n  title: PropTypes.string,\n};\n\nexport default TextField;\n"]},"metadata":{},"sourceType":"module"}