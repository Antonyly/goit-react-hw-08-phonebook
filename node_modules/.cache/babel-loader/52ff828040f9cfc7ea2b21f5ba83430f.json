{"ast":null,"code":"var _jsxFileName = \"/Users/antonlyzun/Desktop/GoIT/goit-react-hw-06-phonebook/src/components/App.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { ContactForm } from './ContactForm/ContactForm';\nimport { ContactList } from './ContactList/ContactList';\nimport { Filter } from './Filter/Filter';\nimport css from './ContactForm/ContactForm.module.css';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CONTACTS_KEY = 'Contact';\nexport const App = () => {\n  _s();\n\n  const [contacts, setContacts] = useState(() => {\n    const localStorageContacts = localStorage.getItem(CONTACTS_KEY);\n    return JSON.parse(localStorageContacts) || [];\n  });\n  const [filter, setFilter] = useState('');\n  useEffect(() => {\n    return localStorage.setItem(CONTACTS_KEY, JSON.stringify(contacts));\n  }, [contacts]);\n\n  const isDuplicate = _ref => {\n    let {\n      name\n    } = _ref;\n    const result = contacts.find(contactItem => contactItem.name.toLowerCase() === name.toLowerCase());\n    return result;\n  };\n\n  const addContact = contactObject => {\n    if (isDuplicate(contactObject)) {\n      return alert(`${contactObject.name} is alredy in contacts`); // Notify.failure(`${contactObject.name} is alredy in contacts`);\n    } else {\n      Notify.success('New contact added');\n    }\n\n    return setContacts(p => [...p, contactObject]);\n  };\n\n  const handlerFilterChange = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const deleteContact = id => {\n    const newContacts = contacts.filter(contact => contact.id !== id);\n    setContacts(newContacts);\n  };\n\n  const filtredContacts = contacts.filter(_ref2 => {\n    let {\n      name\n    } = _ref2;\n    return name.toLowerCase().includes(filter.toLowerCase());\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css.div,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n      addContact: addContact\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Contacts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      value: filter,\n      onChange: handlerFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n      contacts: filtredContacts,\n      handleClick: deleteContact\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 7\n  }, this);\n};\n\n_s(App, \"KE7QnEJrFqnAqx904KCso+Gq+IM=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/antonlyzun/Desktop/GoIT/goit-react-hw-06-phonebook/src/components/App.jsx"],"names":["useState","useEffect","ContactForm","ContactList","Filter","css","Notify","CONTACTS_KEY","App","contacts","setContacts","localStorageContacts","localStorage","getItem","JSON","parse","filter","setFilter","setItem","stringify","isDuplicate","name","result","find","contactItem","toLowerCase","addContact","contactObject","alert","success","p","handlerFilterChange","e","currentTarget","value","deleteContact","id","newContacts","contact","filtredContacts","includes","div"],"mappings":"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","sourcesContent":["import {useState, useEffect} from \"react\";\nimport { ContactForm } from './ContactForm/ContactForm';\nimport { ContactList } from './ContactList/ContactList';\nimport { Filter } from './Filter/Filter';\nimport css from './ContactForm/ContactForm.module.css';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst CONTACTS_KEY = 'Contact';\n\nexport const App = () => {\n  const [contacts, setContacts] = useState(() => {\n    const localStorageContacts = localStorage.getItem(CONTACTS_KEY);\n    return JSON.parse(localStorageContacts) || [];\n  });\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    return localStorage.setItem(CONTACTS_KEY, JSON.stringify(contacts))\n  }, [contacts])\n\n  const isDuplicate = ({ name }) => {\n\n    const result = contacts.find(contactItem => contactItem.name.toLowerCase() === name.toLowerCase());\n    return result\n  };\n  const addContact = (contactObject) => {\n    if (isDuplicate(contactObject)) {\n      return alert(`${contactObject.name} is alredy in contacts`);\n      // Notify.failure(`${contactObject.name} is alredy in contacts`);\n    } else {\n      Notify.success('New contact added');\n    }\n\n    return setContacts((p) => [...p, contactObject]);\n  };\n\n  const handlerFilterChange = (e) => {\n    setFilter(e.currentTarget.value)\n  };\n\n  const deleteContact = (id) => {\n\n    const newContacts = contacts.filter(contact => contact.id !== id);\n    setContacts(newContacts);\n  };\n  const filtredContacts = contacts.filter(({ name }) => name.toLowerCase().includes(filter.toLowerCase()));\n    \n    return (\n      <div className={ css.div}>\n      <h1>Phonebook</h1>\n      <ContactForm addContact={addContact} />\n  \n      <h2>Contacts</h2>\n      <Filter value={filter} onChange={handlerFilterChange} />\n      <ContactList contacts={filtredContacts} handleClick={deleteContact} />      \n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}