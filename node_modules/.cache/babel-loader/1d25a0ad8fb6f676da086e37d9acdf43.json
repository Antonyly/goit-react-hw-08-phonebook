{"ast":null,"code":"import axios from \"axios\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\nconst instanse = axios.create({\n  baseURL: \"https://62d7001e51e6e8f06f1744a3.mockapi.io/contacts\"\n});\nexport const getPhone = async () => {\n  const {\n    data\n  } = await instanse.get(\"/\");\n  return data;\n};\nexport const deletePhone = async id => {\n  const {\n    data\n  } = await instanse.delete(`/${id}`);\n  return data;\n};\nexport const addPhone = async data => {\n  const {\n    data: result\n  } = await instanse.post(\"/\", data);\n  return result;\n};\nexport const fetchContacts = createAsyncThunk(\"contacts/fetch\", async (data, _ref) => {\n  let {\n    rejectWithValue\n  } = _ref;\n\n  try {\n    return await getPhone();\n  } catch (error) {\n    return rejectWithValue(error);\n  }\n});\nexport const addContact = createAsyncThunk(\"contacts/add\", async (data, _ref2) => {\n  let {\n    rejectWithValue\n  } = _ref2;\n\n  try {\n    return addPhone(data);\n  } catch (error) {\n    return rejectWithValue(error);\n  }\n}, {\n  condition: (data, _ref3) => {\n    let {\n      getState\n    } = _ref3;\n    const {\n      contacts\n    } = getState();\n    const isInclude = contacts.items.find(el => el.name.toLowerCase() === data.name.toLowerCase());\n\n    if (isInclude) {\n      alert(`\"${isInclude.name}\" is already in your contacts`);\n      return false;\n    }\n  }\n});\nexport const deleteContact = createAsyncThunk(\"contacts/remove\", async (data, _ref4) => {\n  let {\n    rejectWithValue\n  } = _ref4;\n\n  try {\n    return await deletePhone(data);\n  } catch (error) {\n    return rejectWithValue(error);\n  }\n}); // axios.defaults.baseURL = \"https://637369250bb6b698b60b3203.mockapi.io\";\n// export const fetchContacts = createAsyncThunk(\"contact/fetchAll\", async (_, thunkAPI) => {\n//   try {\n//     const response = await axios.get(\"/contact\");\n//     return response.data;\n//   } catch (error) {\n//     return thunkAPI.rejectWithValue(error.message)\n//   }\n// });\n// export const deleteContact = createAsyncThunk(\"contact/deleteContact\", async (id, thunkAPI) => {\n//   try {\n//     const response = await axios.delete(`/contact/${id}`);\n//     return response.data;\n//   } catch (error) {\n//     return thunkAPI.rejectWithValue(error.message)\n//   }\n// });\n// export const addContact = createAsyncThunk(\"contact/addContact\", async (contactObj, thunkAPI) => {\n//   try {\n//     const response = await axios.post('/contact', contactObj);\n//     return response.data;\n//   } catch (error) {\n//     return thunkAPI.rejectWithValue(error.message)\n//   }\n// });","map":{"version":3,"sources":["/Users/antonlyzun/Desktop/GoIT/goit-react-hw-07-phonebook/src/redux/operations.js"],"names":["axios","createAsyncThunk","instanse","create","baseURL","getPhone","data","get","deletePhone","id","delete","addPhone","result","post","fetchContacts","rejectWithValue","error","addContact","condition","getState","contacts","isInclude","items","find","el","name","toLowerCase","alert","deleteContact"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,kBAAjC;AAGA,MAAMC,QAAQ,GAAGF,KAAK,CAACG,MAAN,CAAa;AAC5BC,EAAAA,OAAO,EAAE;AADmB,CAAb,CAAjB;AAIA,OAAO,MAAMC,QAAQ,GAAG,YAAY;AAClC,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMJ,QAAQ,CAACK,GAAT,CAAa,GAAb,CAAvB;AACA,SAAOD,IAAP;AACD,CAHM;AAKP,OAAO,MAAME,WAAW,GAAG,MAAOC,EAAP,IAAc;AACvC,QAAM;AAAEH,IAAAA;AAAF,MAAW,MAAMJ,QAAQ,CAACQ,MAAT,CAAiB,IAAGD,EAAG,EAAvB,CAAvB;AACA,SAAOH,IAAP;AACD,CAHM;AAKP,OAAO,MAAMK,QAAQ,GAAG,MAAOL,IAAP,IAAgB;AACtC,QAAM;AAAEA,IAAAA,IAAI,EAAEM;AAAR,MAAmB,MAAMV,QAAQ,CAACW,IAAT,CAAc,GAAd,EAAmBP,IAAnB,CAA/B;AACA,SAAOM,MAAP;AACD,CAHM;AAKP,OAAO,MAAME,aAAa,GAAGb,gBAAgB,CAC3C,gBAD2C,EAE3C,OAAOK,IAAP,WAAqC;AAAA,MAAxB;AAAES,IAAAA;AAAF,GAAwB;;AACnC,MAAI;AACF,WAAO,MAAMV,QAAQ,EAArB;AACD,GAFD,CAEE,OAAOW,KAAP,EAAc;AACd,WAAOD,eAAe,CAACC,KAAD,CAAtB;AACD;AACF,CAR0C,CAAtC;AAWP,OAAO,MAAMC,UAAU,GAAGhB,gBAAgB,CACxC,cADwC,EAExC,OAAOK,IAAP,YAAqC;AAAA,MAAxB;AAAES,IAAAA;AAAF,GAAwB;;AACnC,MAAI;AACF,WAAOJ,QAAQ,CAACL,IAAD,CAAf;AACD,GAFD,CAEE,OAAOU,KAAP,EAAc;AACd,WAAOD,eAAe,CAACC,KAAD,CAAtB;AACD;AACF,CARuC,EASxC;AACEE,EAAAA,SAAS,EAAE,CAACZ,IAAD,YAAwB;AAAA,QAAjB;AAAEa,MAAAA;AAAF,KAAiB;AACjC,UAAM;AAAEC,MAAAA;AAAF,QAAeD,QAAQ,EAA7B;AACA,UAAME,SAAS,GAAGD,QAAQ,CAACE,KAAT,CAAeC,IAAf,CACfC,EAAD,IAAQA,EAAE,CAACC,IAAH,CAAQC,WAAR,OAA0BpB,IAAI,CAACmB,IAAL,CAAUC,WAAV,EADlB,CAAlB;;AAGA,QAAIL,SAAJ,EAAe;AACbM,MAAAA,KAAK,CAAE,IAAGN,SAAS,CAACI,IAAK,+BAApB,CAAL;AACA,aAAO,KAAP;AACD;AACF;AAVH,CATwC,CAAnC;AAuBP,OAAO,MAAMG,aAAa,GAAG3B,gBAAgB,CAC3C,iBAD2C,EAE3C,OAAOK,IAAP,YAAqC;AAAA,MAAxB;AAAES,IAAAA;AAAF,GAAwB;;AACnC,MAAI;AACF,WAAO,MAAMP,WAAW,CAACF,IAAD,CAAxB;AACD,GAFD,CAEE,OAAOU,KAAP,EAAc;AACd,WAAOD,eAAe,CAACC,KAAD,CAAtB;AACD;AACF,CAR0C,CAAtC,C,CAWP;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import axios from \"axios\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\n\n\nconst instanse = axios.create({\n  baseURL: \"https://62d7001e51e6e8f06f1744a3.mockapi.io/contacts\",\n});\n\nexport const getPhone = async () => {\n  const { data } = await instanse.get(\"/\");\n  return data;\n};\n\nexport const deletePhone = async (id) => {\n  const { data } = await instanse.delete(`/${id}`);\n  return data;\n};\n\nexport const addPhone = async (data) => {\n  const { data: result } = await instanse.post(\"/\", data);\n  return result;\n};\n\nexport const fetchContacts = createAsyncThunk(\n  \"contacts/fetch\",\n  async (data, { rejectWithValue }) => {\n    try {\n      return await getPhone();\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  }\n);\n\nexport const addContact = createAsyncThunk(\n  \"contacts/add\",\n  async (data, { rejectWithValue }) => {\n    try {\n      return addPhone(data);\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n  {\n    condition: (data, { getState }) => {\n      const { contacts } = getState();\n      const isInclude = contacts.items.find(\n        (el) => el.name.toLowerCase() === data.name.toLowerCase()\n      );\n      if (isInclude) {\n        alert(`\"${isInclude.name}\" is already in your contacts`);\n        return false;\n      }\n    },\n  }\n);\n\nexport const deleteContact = createAsyncThunk(\n  \"contacts/remove\",\n  async (data, { rejectWithValue }) => {\n    try {\n      return await deletePhone(data);\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  }\n);\n\n// axios.defaults.baseURL = \"https://637369250bb6b698b60b3203.mockapi.io\";\n\n// export const fetchContacts = createAsyncThunk(\"contact/fetchAll\", async (_, thunkAPI) => {\n//   try {\n//     const response = await axios.get(\"/contact\");\n//     return response.data;\n//   } catch (error) {\n//     return thunkAPI.rejectWithValue(error.message)\n//   }\n// });\n\n// export const deleteContact = createAsyncThunk(\"contact/deleteContact\", async (id, thunkAPI) => {\n//   try {\n//     const response = await axios.delete(`/contact/${id}`);\n//     return response.data;\n//   } catch (error) {\n//     return thunkAPI.rejectWithValue(error.message)\n//   }\n// });\n\n// export const addContact = createAsyncThunk(\"contact/addContact\", async (contactObj, thunkAPI) => {\n//   try {\n//     const response = await axios.post('/contact', contactObj);\n//     return response.data;\n//   } catch (error) {\n//     return thunkAPI.rejectWithValue(error.message)\n//   }\n// });"]},"metadata":{},"sourceType":"module"}