{"ast":null,"code":"var _jsxFileName = \"/Users/antonlyzun/Desktop/GoIT/goit-react-hw-01-components/src/components/FriendList/FriendListItem.jsx\";\nimport PropTypes from \"prop-types\";\nimport { Friend, Status, Name, FriendHover } from './FriendListItem.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FriendListItem = _ref => {\n  let {\n    avatar,\n    name,\n    isOnline\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Friend, {\n    children: [/*#__PURE__*/_jsxDEV(Status, {\n      isOnline: isOnline\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: avatar,\n      alt: \"User avatar\",\n      width: \"48\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Name, {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(FriendHover, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 12\n  }, this);\n};\n_c = FriendListItem;\nFriendListItem.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"FriendListItem\");","map":{"version":3,"sources":["/Users/antonlyzun/Desktop/GoIT/goit-react-hw-01-components/src/components/FriendList/FriendListItem.jsx"],"names":["PropTypes","Friend","Status","Name","FriendHover","FriendListItem","avatar","name","isOnline","propTypes","string","isRequired","bool"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,IAAzB,EAA+BC,WAA/B,QAAkD,yBAAlD;;AAGA,OAAO,MAAMC,cAAc,GAAG,QAAgC;AAAA,MAA/B;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,IAAV;AAAgBC,IAAAA;AAAhB,GAA+B;AAC1D,sBAAO,QAAC,MAAD;AAAA,4BACK,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA,YADL,eAEK;AAAK,MAAA,GAAG,EAAEF,MAAV;AAAkB,MAAA,GAAG,EAAC,aAAtB;AAAoC,MAAA,KAAK,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,YAFL,eAGK,QAAC,IAAD;AAAA,gBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,YAHL,eAIK,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAJL;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAMH,CAPM;KAAMF,c;AASbA,cAAc,CAACI,SAAf,GAA2B;AACvBH,EAAAA,MAAM,EAAEN,SAAS,CAACU,MAAV,CAAiBC,UADF;AAEvBJ,EAAAA,IAAI,EAAEP,SAAS,CAACU,MAAV,CAAiBC,UAFA;AAGvBH,EAAAA,QAAQ,EAAER,SAAS,CAACY,IAAV,CAAeD;AAHF,CAA3B","sourcesContent":["import PropTypes from \"prop-types\"\nimport { Friend, Status, Name, FriendHover } from './FriendListItem.styled'\n\n\nexport const FriendListItem = ({ avatar, name, isOnline }) => {\n    return <Friend>\n                <Status isOnline={isOnline} />\n                <img src={avatar} alt=\"User avatar\" width=\"48\" />\n                <Name>{name}</Name>\n                <FriendHover />\n            </Friend>\n}\n\nFriendListItem.propTypes = {\n    avatar: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    isOnline: PropTypes.bool.isRequired,\n}"]},"metadata":{},"sourceType":"module"}