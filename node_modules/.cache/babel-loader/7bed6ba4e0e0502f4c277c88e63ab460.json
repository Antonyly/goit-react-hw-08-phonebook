{"ast":null,"code":"var _jsxFileName = \"/Users/antonlyzun/Desktop/GoIT/goit-react-hw-06-phonebook/src/components/ContactForm/ContactForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { nanoid } from 'nanoid';\nimport PropTypes from \"prop-types\";\nimport s from './ContactForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ContactForm = _ref => {\n  _s();\n\n  let {\n    addContact\n  } = _ref;\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    if (name === 'name') {\n      setName(value);\n    }\n\n    ;\n\n    if (name === 'number') {\n      setNumber(value);\n    }\n\n    ;\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const contactObj = {\n      name,\n      number,\n      id: nanoid()\n    };\n    addContact(contactObj);\n    resetState();\n  };\n\n  const resetState = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: s.form,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n        title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n        required: true,\n        value: name,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Number\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"tel\",\n        name: \"number\",\n        pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n        title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n        required: true,\n        value: number,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: s.btn,\n      type: \"submit\",\n      children: \"Add contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ContactForm, \"mgYk2feJE7Nd8w88JvjzPww6GtA=\");\n\n_c = ContactForm;\nContactForm.propTypes = {\n  addContact: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["/Users/antonlyzun/Desktop/GoIT/goit-react-hw-06-phonebook/src/components/ContactForm/ContactForm.jsx"],"names":["useState","nanoid","PropTypes","s","ContactForm","addContact","name","setName","number","setNumber","handleChange","e","value","target","handleSubmit","preventDefault","contactObj","id","resetState","form","btn","propTypes","func","isRequired"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,CAAP,MAAc,0BAAd;;AAEA,OAAO,MAAMC,WAAW,GAAG,QAAoB;AAAA;;AAAA,MAAnB;AAAEC,IAAAA;AAAF,GAAmB;AAC3C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMU,YAAY,GAAIC,CAAD,IAAO;AACxB,UAAM;AAAEL,MAAAA,IAAF;AAAQM,MAAAA;AAAR,QAAkBD,CAAC,CAACE,MAA1B;;AAEA,QAAIP,IAAI,KAAK,MAAb,EAAqB;AACjBC,MAAAA,OAAO,CAACK,KAAD,CAAP;AACH;;AAAA;;AACD,QAAIN,IAAI,KAAK,QAAb,EAAuB;AACnBG,MAAAA,SAAS,CAACG,KAAD,CAAT;AACH;;AAAA;AACJ,GATD;;AAWA,QAAME,YAAY,GAAIH,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACI,cAAF;AAEA,UAAMC,UAAU,GAAG;AACfV,MAAAA,IADe;AAEfE,MAAAA,MAFe;AAGfS,MAAAA,EAAE,EAAEhB,MAAM;AAHK,KAAnB;AAMAI,IAAAA,UAAU,CAACW,UAAD,CAAV;AAEAE,IAAAA,UAAU;AACb,GAZD;;AAaA,QAAMA,UAAU,GAAG,MAAM;AACrBX,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,IAAAA,SAAS,CAAC,EAAD,CAAT;AACH,GAHD;;AAKA,sBACI;AAAM,IAAA,SAAS,EAAEN,CAAC,CAACgB,IAAnB;AAAyB,IAAA,QAAQ,EAAEL,YAAnC;AAAA,4BACI;AAAA,sCACI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,IAAI,EAAC,MAFT;AAGI,QAAA,OAAO,EAAC,wHAHZ;AAII,QAAA,KAAK,EAAC,wIAJV;AAKI,QAAA,QAAQ,MALZ;AAMI,QAAA,KAAK,EAAER,IANX;AAOI,QAAA,QAAQ,EAAEI;AAPd;AAAA;AAAA;AAAA;AAAA,cADJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAYI;AAAA,wCACI;AACI,QAAA,IAAI,EAAC,KADT;AAEI,QAAA,IAAI,EAAC,QAFT;AAGI,QAAA,OAAO,EAAC,wFAHZ;AAII,QAAA,KAAK,EAAC,8FAJV;AAKI,QAAA,QAAQ,MALZ;AAMI,QAAA,KAAK,EAAEF,MANX;AAOI,QAAA,QAAQ,EAAEE;AAPd;AAAA;AAAA;AAAA;AAAA,cADJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ,eAuBI;AAAQ,MAAA,SAAS,EAAEP,CAAC,CAACiB,GAArB;AAA0B,MAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH,CA5DM;;GAAMhB,W;;KAAAA,W;AA8DbA,WAAW,CAACiB,SAAZ,GAAwB;AACpBhB,EAAAA,UAAU,EAAEH,SAAS,CAACoB,IAAV,CAAeC;AADP,CAAxB","sourcesContent":["import {useState} from \"react\";\nimport { nanoid } from 'nanoid'\nimport PropTypes from \"prop-types\"\nimport s from './ContactForm.module.css'\n\nexport const ContactForm = ({ addContact }) => {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    const handleChange = (e) => {\n        const { name, value } = e.target\n        \n        if (name === 'name') {\n            setName(value);\n        };\n        if (name === 'number') {\n            setNumber(value);\n        };\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        const contactObj = {\n            name,\n            number,\n            id: nanoid(),\n        };\n        \n        addContact(contactObj);\n\n        resetState();\n    };\n    const resetState = () => {\n        setName('');\n        setNumber('');\n    };\n    \n    return (\n        <form className={s.form} onSubmit={handleSubmit}>\n            <label>Name\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required\n                    value={name}\n                    onChange={handleChange}\n                />\n            </label>\n            <label>Number\n                <input\n                    type=\"tel\"\n                    name=\"number\"\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    required\n                    value={number}\n                    onChange={handleChange}\n                />\n            </label>\n            <button className={s.btn} type='submit'>Add contact</button>\n        </form>\n    )\n};\n\nContactForm.propTypes = {\n    addContact: PropTypes.func.isRequired\n}\n"]},"metadata":{},"sourceType":"module"}