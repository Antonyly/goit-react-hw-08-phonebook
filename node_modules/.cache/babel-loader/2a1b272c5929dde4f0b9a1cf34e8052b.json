{"ast":null,"code":"var _jsxFileName = \"/Users/antonlyzun/Desktop/GoIT/goit-react-hw-07-phonebook/src/components/ContactForm/ContactForm.js\",\n    _s = $RefreshSig$();\n\nimport s from './ContactForm.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { addContact } from 'redux/operations';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ContactForm = () => {\n  _s();\n\n  const contacts = useSelector(state => state.contacts.items);\n  const isLoading = useSelector(state => state.contacts.isLoading);\n  const error = useSelector(state => state.contacts.error);\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n\n  const isDuplicate = name => {\n    const result = contacts === null || contacts === void 0 ? void 0 : contacts.find(contactItem => contactItem.name.toLowerCase() === name.toLowerCase());\n    return result;\n  };\n\n  useEffect(() => {\n    (error === null || error === void 0 ? void 0 : error.type) === 'add' && Notify.failure(`${error.message}`);\n  }, [error]);\n\n  const addContactToStore = contactObject => {\n    if (isDuplicate(contactObject.name)) {\n      Notify.warning(`${contactObject.name} is alredy in contacts`);\n      return;\n    }\n\n    dispatch(addContact(contactObject));\n    resetState();\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === 'name') setName(value);\n    if (name === 'phone') setPhone(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const contactObj = {\n      name,\n      phone\n    };\n    addContactToStore(contactObj);\n  };\n\n  const resetState = () => {\n    setName('');\n    setPhone('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: css.form,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n        title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n        required: true,\n        value: name,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Number\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"tel\",\n        name: \"phone\",\n        pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n        title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n        required: true,\n        value: phone,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: isLoading === 'add',\n      children: isLoading === 'add' ? 'Adding...' : 'Add contact'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContactForm, \"RLXWznogptQ15ed+Gw1uW9WK0+o=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["/Users/antonlyzun/Desktop/GoIT/goit-react-hw-07-phonebook/src/components/ContactForm/ContactForm.js"],"names":["s","useSelector","useDispatch","Notify","addContact","ContactForm","contacts","state","items","isLoading","error","dispatch","name","setName","useState","phone","setPhone","isDuplicate","result","find","contactItem","toLowerCase","useEffect","type","failure","message","addContactToStore","contactObject","warning","resetState","handleChange","e","value","target","handleSubmit","preventDefault","contactObj","css","form"],"mappings":"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","sourcesContent":["import s from './ContactForm.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { addContact } from 'redux/operations';\n\nexport const ContactForm = () => {\n  const contacts = useSelector(state => state.contacts.items);\n  const isLoading = useSelector(state => state.contacts.isLoading);\n  const error = useSelector(state => state.contacts.error);\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n\n  const isDuplicate = name => {\n    const result = contacts?.find(\n      contactItem => contactItem.name.toLowerCase() === name.toLowerCase()\n    );\n    return result;\n  };\n\n  useEffect(() => {\n    error?.type === 'add' && Notify.failure(`${error.message}`);\n  }, [error]);\n\n  const addContactToStore = contactObject => {\n    if (isDuplicate(contactObject.name)) {\n      Notify.warning(`${contactObject.name} is alredy in contacts`);\n      return;\n    }\n\n    dispatch(addContact(contactObject));\n    resetState();\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    if (name === 'name') setName(value);\n    if (name === 'phone') setPhone(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const contactObj = {\n      name,\n      phone,\n    };\n\n    addContactToStore(contactObj);\n  };\n\n  const resetState = () => {\n    setName('');\n    setPhone('');\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n      <label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"phone\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={phone}\n          onChange={handleChange}\n        />\n      </label>\n      <button type=\"submit\" disabled={isLoading === 'add'}>\n        {isLoading === 'add' ? 'Adding...' : 'Add contact'}\n      </button>\n    </form>\n  );\n};"]},"metadata":{},"sourceType":"module"}