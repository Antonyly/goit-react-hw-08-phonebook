{"ast":null,"code":"var _jsxFileName = \"/Users/antonlyzun/Desktop/GoIT/goit-react-hw-02-phonebook/src/components/App.jsx\";\nimport React, { Component } from \"react\";\nimport { ContactForm } from './ContactForm/ContactForm';\nimport { ContactList } from './ContactList/ContactList';\nimport { Filter } from './Filter/Filter';\nimport css from './ContactForm/ContactForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      contacts: [],\n      filter: ''\n    };\n\n    this.isDuplicate = _ref => {\n      let {\n        name\n      } = _ref;\n      const {\n        contacts\n      } = this.state;\n      const result = contacts.find(contactItem => contactItem.name.toLowerCase() === name.toLowerCase());\n      return result;\n    };\n\n    this.addContact = contactObject => {\n      if (this.isDuplicate(contactObject)) {\n        return alert(`${contactObject.name} is alredy in contacts`);\n      }\n\n      return this.setState(prevState => ({\n        contacts: [...prevState.contacts, contactObject]\n      }));\n    };\n\n    this.handlerFilterChange = e => {\n      this.setState({\n        filter: e.currentTarget.value\n      });\n    };\n\n    this.deleteContact = id => {\n      const {\n        contacts\n      } = this.state;\n      const newContacts = contacts.filter(contact => contact.id !== id);\n      return this.setState({\n        contacts: newContacts\n      });\n    };\n  }\n\n  render() {\n    const {\n      contacts,\n      filter\n    } = this.state;\n    const {\n      addContact,\n      handlerFilterChange,\n      deleteContact\n    } = this;\n    const filtredContacts = contacts.filter(_ref2 => {\n      let {\n        name\n      } = _ref2;\n      return name.toLowerCase().includes(filter.toLowerCase());\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: css.div,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Phonebook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n        addContact: addContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Filter, {\n        value: filter,\n        onChange: handlerFilterChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n        contacts: filtredContacts,\n        handleClick: deleteContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n;","map":{"version":3,"sources":["/Users/antonlyzun/Desktop/GoIT/goit-react-hw-02-phonebook/src/components/App.jsx"],"names":["React","Component","ContactForm","ContactList","Filter","css","App","state","contacts","filter","isDuplicate","name","result","find","contactItem","toLowerCase","addContact","contactObject","alert","setState","prevState","handlerFilterChange","e","currentTarget","value","deleteContact","id","newContacts","contact","render","filtredContacts","includes","div"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,OAAOC,GAAP,MAAgB,sCAAhB;;AAEA,OAAO,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAEjCM,KAFiC,GAEzB;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,MAAM,EAAE;AAFF,KAFyB;;AAAA,SAOjCC,WAPiC,GAOnB,QAAc;AAAA,UAAb;AAAEC,QAAAA;AAAF,OAAa;AAC1B,YAAM;AAAEH,QAAAA;AAAF,UAAe,KAAKD,KAA1B;AACA,YAAMK,MAAM,GAAGJ,QAAQ,CAACK,IAAT,CAAcC,WAAW,IAAIA,WAAW,CAACH,IAAZ,CAAiBI,WAAjB,OAAmCJ,IAAI,CAACI,WAAL,EAAhE,CAAf;AACA,aAAOH,MAAP;AACD,KAXgC;;AAAA,SAajCI,UAbiC,GAanBC,aAAD,IAAmB;AAC9B,UAAI,KAAKP,WAAL,CAAiBO,aAAjB,CAAJ,EAAqC;AACnC,eAAOC,KAAK,CAAE,GAAED,aAAa,CAACN,IAAK,wBAAvB,CAAZ;AACD;;AAED,aAAO,KAAKQ,QAAL,CAAcC,SAAS,KAAK;AACjCZ,QAAAA,QAAQ,EAAE,CAAC,GAAGY,SAAS,CAACZ,QAAd,EAAwBS,aAAxB;AADuB,OAAL,CAAvB,CAAP;AAGD,KArBgC;;AAAA,SAuBjCI,mBAvBiC,GAuBVC,CAAD,IAAO;AAC3B,WAAKH,QAAL,CAAc;AACZV,QAAAA,MAAM,EAAEa,CAAC,CAACC,aAAF,CAAgBC;AADZ,OAAd;AAGD,KA3BgC;;AAAA,SA6BjCC,aA7BiC,GA6BhBC,EAAD,IAAQ;AACtB,YAAM;AAAElB,QAAAA;AAAF,UAAe,KAAKD,KAA1B;AACA,YAAMoB,WAAW,GAAGnB,QAAQ,CAACC,MAAT,CAAgBmB,OAAO,IAAIA,OAAO,CAACF,EAAR,KAAeA,EAA1C,CAApB;AACA,aAAO,KAAKP,QAAL,CAAc;AACnBX,QAAAA,QAAQ,EAAEmB;AADS,OAAd,CAAP;AAGD,KAnCgC;AAAA;;AAsCjCE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAErB,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAuB,KAAKF,KAAlC;AACA,UAAM;AAACS,MAAAA,UAAD;AAAaK,MAAAA,mBAAb;AAAkCI,MAAAA;AAAlC,QAAmD,IAAzD;AAEA,UAAMK,eAAe,GAAGtB,QAAQ,CAACC,MAAT,CAAgB;AAAA,UAAC;AAACE,QAAAA;AAAD,OAAD;AAAA,aAAYA,IAAI,CAACI,WAAL,GAAmBgB,QAAnB,CAA4BtB,MAAM,CAACM,WAAP,EAA5B,CAAZ;AAAA,KAAhB,CAAxB;AAEA,wBACE;AAAK,MAAA,SAAS,EAAGV,GAAG,CAAC2B,GAArB;AAAA,8BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,QAAC,WAAD;AAAa,QAAA,UAAU,EAAEhB;AAAzB;AAAA;AAAA;AAAA;AAAA,cAFA,eAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJA,eAKA,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAEP,MAAf;AAAuB,QAAA,QAAQ,EAAEY;AAAjC;AAAA;AAAA;AAAA;AAAA,cALA,eAMA,QAAC,WAAD;AAAa,QAAA,QAAQ,EAAES,eAAvB;AAAwC,QAAA,WAAW,EAAEL;AAArD;AAAA;AAAA;AAAA;AAAA,cANA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AAtDgC;AAuDlC","sourcesContent":["import React, { Component } from \"react\";\nimport { ContactForm } from './ContactForm/ContactForm'\nimport { ContactList } from './ContactList/ContactList'\nimport { Filter } from './Filter/Filter'\nimport css from './ContactForm/ContactForm.module.css'\n\nexport class App extends Component {\n\n  state = {\n    contacts: [],\n    filter: ''\n  }\n\n  isDuplicate = ({ name }) => {\n    const { contacts } = this.state\n    const result = contacts.find(contactItem => contactItem.name.toLowerCase() === name.toLowerCase())\n    return result\n  }\n\n  addContact = (contactObject) => {\n    if (this.isDuplicate(contactObject)) {\n      return alert(`${contactObject.name} is alredy in contacts`)\n    }\n\n    return this.setState(prevState => ({\n      contacts: [...prevState.contacts, contactObject],\n    }))\n  }\n\n  handlerFilterChange = (e) => {\n    this.setState({\n      filter: e.currentTarget.value\n    }) \n  }\n\n  deleteContact = (id) => {\n    const { contacts } = this.state\n    const newContacts = contacts.filter(contact => contact.id !== id)\n    return this.setState({\n      contacts: newContacts\n    })    \n  }\n \n\n  render() {\n    const { contacts, filter } = this.state\n    const {addContact, handlerFilterChange, deleteContact} = this\n\n    const filtredContacts = contacts.filter(({name}) => name.toLowerCase().includes(filter.toLowerCase()))\n    \n    return (\n      <div className={ css.div}>\n      <h1>Phonebook</h1>\n      <ContactForm addContact={addContact} />\n  \n      <h2>Contacts</h2>\n      <Filter value={filter} onChange={handlerFilterChange} />\n      <ContactList contacts={filtredContacts} handleClick={deleteContact} />      \n    </div>\n  );\n  }\n};"]},"metadata":{},"sourceType":"module"}