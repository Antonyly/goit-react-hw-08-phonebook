{"ast":null,"code":"// import axios from \"axios\";\n// import { createAsyncThunk } from \"@reduxjs/toolkit\";\n// axios.defaults.baseURL = \"https://637360fc0bb6b698b60a4837.mockapi.io\";\n// export const fetchContacts = createAsyncThunk(\"contacts/fetchAll\", async (_, thunkAPI) => {\n//   try {\n//     const response = await axios.get(\"/contacts\");\n//     return response.data;\n//   } catch (error) {\n//     return thunkAPI.rejectWithValue(error.message)\n//   }\n// });\n// export const deleteContact = createAsyncThunk(\"contacts/deleteContact\", async (id, thunkAPI) => {\n//   try {\n//     const response = await axios.delete(`/contacts/${id}`);\n//     return response.data;\n//   } catch (error) {\n//     return thunkAPI.rejectWithValue(error.message)\n//   }\n// });\n// export const addContact = createAsyncThunk(\"contacts/addContact\", async (contactObj, thunkAPI) => {\n//   try {\n//     const response = await axios.post('/contacts', contactObj);\n//     return response.data;\n//   } catch (error) {\n//     return thunkAPI.rejectWithValue(error.message)\n//   }\n// });\nimport axios from \"axios\";\nconst instanse = axios.create({\n  baseURL: \"https://62d7001e51e6e8f06f1744a3.mockapi.io/contacts\"\n});\nexport const fetchContacts = async () => {\n  const {\n    data\n  } = await instanse.get(\"/\");\n  return data;\n};\nexport const deleteContact = async id => {\n  const {\n    data\n  } = await instanse.delete(`/${id}`);\n  return data;\n};\nexport const addContact = async data => {\n  const {\n    data: result\n  } = await instanse.post(\"/\", data);\n  return result;\n};","map":{"version":3,"sources":["/Users/antonlyzun/Desktop/GoIT/goit-react-hw-07-phonebook/src/redux/operations.js"],"names":["axios","instanse","create","baseURL","fetchContacts","data","get","deleteContact","id","delete","addContact","result","post"],"mappings":"AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC5BC,EAAAA,OAAO,EAAE;AADmB,CAAb,CAAjB;AAIA,OAAO,MAAMC,aAAa,GAAG,YAAY;AACvC,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMJ,QAAQ,CAACK,GAAT,CAAa,GAAb,CAAvB;AACA,SAAOD,IAAP;AACD,CAHM;AAKP,OAAO,MAAME,aAAa,GAAG,MAAOC,EAAP,IAAc;AACzC,QAAM;AAAEH,IAAAA;AAAF,MAAW,MAAMJ,QAAQ,CAACQ,MAAT,CAAiB,IAAGD,EAAG,EAAvB,CAAvB;AACA,SAAOH,IAAP;AACD,CAHM;AAKP,OAAO,MAAMK,UAAU,GAAG,MAAOL,IAAP,IAAgB;AACxC,QAAM;AAAEA,IAAAA,IAAI,EAAEM;AAAR,MAAmB,MAAMV,QAAQ,CAACW,IAAT,CAAc,GAAd,EAAmBP,IAAnB,CAA/B;AACA,SAAOM,MAAP;AACD,CAHM","sourcesContent":["// import axios from \"axios\";\n// import { createAsyncThunk } from \"@reduxjs/toolkit\";\n\n// axios.defaults.baseURL = \"https://637360fc0bb6b698b60a4837.mockapi.io\";\n\n// export const fetchContacts = createAsyncThunk(\"contacts/fetchAll\", async (_, thunkAPI) => {\n//   try {\n//     const response = await axios.get(\"/contacts\");\n//     return response.data;\n//   } catch (error) {\n//     return thunkAPI.rejectWithValue(error.message)\n//   }\n// });\n\n// export const deleteContact = createAsyncThunk(\"contacts/deleteContact\", async (id, thunkAPI) => {\n//   try {\n//     const response = await axios.delete(`/contacts/${id}`);\n//     return response.data;\n//   } catch (error) {\n//     return thunkAPI.rejectWithValue(error.message)\n//   }\n// });\n\n// export const addContact = createAsyncThunk(\"contacts/addContact\", async (contactObj, thunkAPI) => {\n//   try {\n//     const response = await axios.post('/contacts', contactObj);\n//     return response.data;\n//   } catch (error) {\n//     return thunkAPI.rejectWithValue(error.message)\n//   }\n// });\nimport axios from \"axios\";\n\nconst instanse = axios.create({\n  baseURL: \"https://62d7001e51e6e8f06f1744a3.mockapi.io/contacts\",\n});\n\nexport const fetchContacts = async () => {\n  const { data } = await instanse.get(\"/\");\n  return data;\n};\n\nexport const deleteContact = async (id) => {\n  const { data } = await instanse.delete(`/${id}`);\n  return data;\n};\n\nexport const addContact = async (data) => {\n  const { data: result } = await instanse.post(\"/\", data);\n  return result;\n};"]},"metadata":{},"sourceType":"module"}