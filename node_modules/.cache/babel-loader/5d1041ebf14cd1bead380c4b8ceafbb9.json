{"ast":null,"code":"var _jsxFileName = \"/Users/antonlyzun/Desktop/GoIT/goit-react-hw-01-components/src/components/Statistics/Statistics.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './statistics.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction randomColor() {\n  return `#${Math.floor(Math.random() * 16777215).toString(16)}`;\n}\n\nconst Statistics = _ref => {\n  let {\n    title,\n    stats\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: css.statistics,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: css.title,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: css.list,\n      children: stats.map(el => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: css.item,\n        style: {\n          backgroundColor: randomColor()\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: css.label,\n          children: el.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: css.percentage,\n          children: [el.percentage, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)]\n      }, el.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 3\n  }, this);\n};\n\n_c = Statistics;\nStatistics.propTypes = {\n  stats: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    percentage: PropTypes.number.isRequired\n  }))\n};\nexport default Statistics;\n\nvar _c;\n\n$RefreshReg$(_c, \"Statistics\");","map":{"version":3,"sources":["/Users/antonlyzun/Desktop/GoIT/goit-react-hw-01-components/src/components/Statistics/Statistics.jsx"],"names":["React","PropTypes","css","randomColor","Math","floor","random","toString","Statistics","title","stats","statistics","list","map","el","item","backgroundColor","label","percentage","id","propTypes","arrayOf","shape","string","isRequired","number"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,GAAP,MAAgB,yBAAhB;;;AAGA,SAASC,WAAT,GAAuB;AACrB,SAAQ,IAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,QAA3B,EAAqCC,QAArC,CAA8C,EAA9C,CAAkD,EAA7D;AACD;;AAED,MAAMC,UAAU,GAAG;AAAA,MAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD;AAAA,sBACjB;AAAS,IAAA,SAAS,EAAER,GAAG,CAACS,UAAxB;AAAA,4BACE;AAAI,MAAA,SAAS,EAAET,GAAG,CAACO,KAAnB;AAAA,gBAA2BA;AAA3B;AAAA;AAAA;AAAA;AAAA,YADF,eAEF;AAAI,MAAA,SAAS,EAAEP,GAAG,CAACU,IAAnB;AAAA,gBACKF,KAAK,CAACG,GAAN,CAAUC,EAAE,iBACT;AAAI,QAAA,SAAS,EAAEZ,GAAG,CAACa,IAAnB;AACE,QAAA,KAAK,EAAE;AACLC,UAAAA,eAAe,EAAEb,WAAW;AADvB,SADT;AAAA,gCAKE;AAAM,UAAA,SAAS,EAAED,GAAG,CAACe,KAArB;AAAA,oBAA6BH,EAAE,CAACG;AAAhC;AAAA;AAAA;AAAA;AAAA,gBALF,eAME;AAAM,UAAA,SAAS,EAAEf,GAAG,CAACgB,UAArB;AAAA,qBAAkCJ,EAAE,CAACI,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA,SAIOJ,EAAE,CAACK,EAJV;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAFE;AAAA;AAAA;AAAA;AAAA;AAAA,UADiB;AAAA,CAAnB;;KAAMX,U;AAkBNA,UAAU,CAACY,SAAX,GAAuB;AACnBV,EAAAA,KAAK,EAAET,SAAS,CAACoB,OAAV,CACHpB,SAAS,CAACqB,KAAV,CAAgB;AACZH,IAAAA,EAAE,EAAElB,SAAS,CAACsB,MAAV,CAAiBC,UADT;AAEZP,IAAAA,KAAK,EAAEhB,SAAS,CAACsB,MAAV,CAAiBC,UAFZ;AAGZN,IAAAA,UAAU,EAAEjB,SAAS,CAACwB,MAAV,CAAiBD;AAHjB,GAAhB,CADG;AADY,CAAvB;AAWA,eAAehB,UAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './statistics.module.css';\n\n\nfunction randomColor() {\n  return `#${Math.floor(Math.random() * 16777215).toString(16)}`;\n}\n\nconst Statistics = ({ title, stats }) => (\n  <section className={css.statistics}>\n    <h2 className={css.title}>{title}</h2>\n<ul className={css.list}>\n    {stats.map(el => (\n        <li className={css.item}\n          style={{\n            backgroundColor: randomColor(),\n          }}\n          key={el.id}>\n          <span className={css.label}>{el.label}</span>\n          <span className={css.percentage}>{el.percentage}%</span>\n        </li>\n    ))}\n</ul>\n  </section>\n)\n\nStatistics.propTypes = {\n    stats: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            label: PropTypes.string.isRequired,\n            percentage: PropTypes.number.isRequired,\n        }),\n    ),\n};\n\n\nexport default Statistics;"]},"metadata":{},"sourceType":"module"}