{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { signupUser, loginUser, logoutUser, getCurrentUser } from \"./auth-operations\";\nexport const initialState = {\n  user: {},\n  token: \"\",\n  isLogin: false,\n  loading: false,\n  error: null\n};\n\nconst panding = store => ({ ...store,\n  loading: true,\n  error: null\n});\n\nconst rejected = (store, _ref) => {\n  let {\n    payload\n  } = _ref;\n  return { ...store,\n    loading: false,\n    error: payload.message\n  };\n};\n\nconst authSlice = createSlice({\n  name: \"contacts\",\n  initialState,\n  extraReducers: {\n    [signupUser.pending]: panding,\n    [signupUser.fulfilled]: (store, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n      return { ...store,\n        loading: false,\n        token: payload.token,\n        isLogin: true,\n        user: payload.user\n      };\n    },\n    [signupUser.rejected]: rejected,\n    [loginUser.pending]: panding,\n    [loginUser.fulfilled]: (store, _ref3) => {\n      let {\n        payload\n      } = _ref3;\n      return { ...store,\n        loading: false,\n        token: payload.token,\n        isLogin: true,\n        user: payload.user\n      };\n    },\n    [loginUser.rejected]: rejected,\n    [logoutUser.pending]: panding,\n    [logoutUser.fulfilled]: () => initialState,\n    [logoutUser.rejected]: rejected,\n    [getCurrentUser.pending]: panding,\n    [getCurrentUser.rejected]: () => initialState,\n    [getCurrentUser.fulfilled]: (store, _ref4) => {\n      let {\n        payload\n      } = _ref4;\n\n      if (payload.token) {\n        return { ...store,\n          loading: false,\n          isLogin: true,\n          user: payload.user,\n          token: payload.token\n        };\n      }\n\n      return { ...store,\n        loading: false,\n        isLogin: true,\n        user: payload\n      };\n    }\n  }\n});\nexport default authSlice.reducer;","map":{"version":3,"sources":["/Users/antonlyzun/Desktop/GoIT/goit-react-hw-08-phonebook/src/redux/auth/auth-slice.js"],"names":["createSlice","signupUser","loginUser","logoutUser","getCurrentUser","initialState","user","token","isLogin","loading","error","panding","store","rejected","payload","message","authSlice","name","extraReducers","pending","fulfilled","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport {\n  signupUser,\n  loginUser,\n  logoutUser,\n  getCurrentUser,\n} from \"./auth-operations\";\n\nexport const initialState = {\n  user: {},\n  token: \"\",\n  isLogin: false,\n  loading: false,\n  error: null,\n};\n\nconst panding = (store) => ({\n  ...store,\n  loading: true,\n  error: null,\n});\n\nconst rejected = (store, { payload }) => ({\n  ...store,\n  loading: false,\n  error: payload.message,\n});\n\nconst authSlice = createSlice({\n  name: \"contacts\",\n  initialState,\n  extraReducers: {\n    [signupUser.pending]: panding,\n    [signupUser.fulfilled]: (store, { payload }) => ({\n      ...store,\n      loading: false,\n      token: payload.token,\n      isLogin: true,\n      user: payload.user,\n    }),\n    [signupUser.rejected]: rejected,\n\n    [loginUser.pending]: panding,\n    [loginUser.fulfilled]: (store, { payload }) => ({\n      ...store,\n      loading: false,\n      token: payload.token,\n      isLogin: true,\n      user: payload.user,\n    }),\n    [loginUser.rejected]: rejected,\n\n    [logoutUser.pending]: panding,\n    [logoutUser.fulfilled]: () => initialState,\n    [logoutUser.rejected]: rejected,\n\n    [getCurrentUser.pending]: panding,\n    [getCurrentUser.rejected]: () => initialState,\n    [getCurrentUser.fulfilled]: (store, { payload }) => {\n      if (payload.token) {\n        return {\n          ...store,\n          loading: false,\n          isLogin: true,\n          user: payload.user,\n          token: payload.token\n        };\n      }\n      return {\n        ...store,\n        loading: false,\n        isLogin: true,\n        user: payload,\n      };\n    },\n  },\n});\n\nexport default authSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}