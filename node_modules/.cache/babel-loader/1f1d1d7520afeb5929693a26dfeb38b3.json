{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport storage from 'redux-persist/lib/storage';\nimport { persistReducer } from 'redux-persist';\nexport const initialState = {\n  items: [],\n  filter: ''\n};\nconst contactsSlice = createSlice({\n  name: 'contacts',\n  initialState: initialState.items,\n  reducers: {\n    add(state, _ref) {\n      let {\n        payload\n      } = _ref;\n      state.contacts.push(payload);\n    },\n\n    remove(state, _ref2) {\n      let {\n        payload\n      } = _ref2;\n      return {\n        items: state.contacts.filter(contact => contact.id !== payload)\n      };\n    }\n\n  }\n});\nconst persistConfig = {\n  key: 'root',\n  storage\n};\nexport const contactsReducer = persistReducer(persistConfig, contactsSlice.reducer);\nexport const {\n  add,\n  remove\n} = contactsSlice.actions;","map":{"version":3,"sources":["/Users/antonlyzun/Desktop/GoIT/goit-react-hw-06-phonebook/src/redux/contacts/contacts-slice.js"],"names":["createSlice","storage","persistReducer","initialState","items","filter","contactsSlice","name","reducers","add","state","payload","contacts","push","remove","contact","id","persistConfig","key","contactsReducer","reducer","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,cAAT,QAA+B,eAA/B;AAEA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,KAAK,EAAE,EADmB;AAE1BC,EAAAA,MAAM,EAAE;AAFkB,CAArB;AAKP,MAAMC,aAAa,GAAGN,WAAW,CAAC;AAC9BO,EAAAA,IAAI,EAAE,UADwB;AAE9BJ,EAAAA,YAAY,EAAEA,YAAY,CAACC,KAFG;AAG9BI,EAAAA,QAAQ,EAAE;AACNC,IAAAA,GAAG,CAACC,KAAD,QAAqB;AAAA,UAAb;AAAEC,QAAAA;AAAF,OAAa;AACpBD,MAAAA,KAAK,CAACE,QAAN,CAAeC,IAAf,CAAoBF,OAApB;AAEH,KAJK;;AAKNG,IAAAA,MAAM,CAACJ,KAAD,SAAqB;AAAA,UAAb;AAAEC,QAAAA;AAAF,OAAa;AACvB,aAAO;AACHP,QAAAA,KAAK,EAAGM,KAAK,CAACE,QAAN,CAAeP,MAAf,CAAuBU,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeL,OAAjD;AADL,OAAP;AAGH;;AATK;AAHoB,CAAD,CAAjC;AAgBA,MAAMM,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBjB,EAAAA;AAFoB,CAAtB;AAKA,OAAO,MAAMkB,eAAe,GAAGjB,cAAc,CAACe,aAAD,EAAgBX,aAAa,CAACc,OAA9B,CAAtC;AACP,OAAO,MAAM;AAAEX,EAAAA,GAAF;AAAOK,EAAAA;AAAP,IAAkBR,aAAa,CAACe,OAAtC","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport storage from 'redux-persist/lib/storage';\nimport { persistReducer } from 'redux-persist';\n\nexport const initialState = {\n  items: [],\n  filter: '',\n};\n\nconst contactsSlice = createSlice({\n    name: 'contacts',\n    initialState: initialState.items,\n    reducers: {\n        add(state, { payload }) {\n            state.contacts.push(payload)\n          \n        },\n        remove(state, { payload }) {\n            return {\n                items:  state.contacts.filter((contact => contact.id !== payload)) \n            }                      \n        }\n    }\n})\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\n\nexport const contactsReducer = persistReducer(persistConfig, contactsSlice.reducer);\nexport const { add, remove } = contactsSlice.actions;\n"]},"metadata":{},"sourceType":"module"}