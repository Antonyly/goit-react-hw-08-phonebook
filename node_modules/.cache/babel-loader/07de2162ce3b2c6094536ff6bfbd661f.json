{"ast":null,"code":"var _jsxFileName = \"/Users/antonlyzun/Desktop/GoIT/goit-react-hw-06-phonebook/src/components/ContactsList/ContactList.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport s from './ContactList.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from \"redux/contactsSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ContactList = () => {\n  _s();\n\n  const {\n    contacts\n  } = useSelector(state => state.contacts);\n  const filterValue = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n  const filtredContacts = contacts === null || contacts === void 0 ? void 0 : contacts.filter(_ref => {\n    let {\n      name\n    } = _ref;\n    return name.toLowerCase().includes(filterValue.toLowerCase());\n  });\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: s.contactList,\n    children: filtredContacts === null || filtredContacts === void 0 ? void 0 : filtredContacts.map(_ref2 => {\n      let {\n        name,\n        number,\n        id\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [name, \": \", number, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: s.button,\n          type: \"button\",\n          onClick: () => dispatch(deleteContact(id)),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 54\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 24\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ContactList, \"QP64Uk16/n6c7wp7qEcVgoCSVLo=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = ContactList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactList\");","map":{"version":3,"sources":["/Users/antonlyzun/Desktop/GoIT/goit-react-hw-06-phonebook/src/components/ContactsList/ContactList.js"],"names":["React","s","useDispatch","useSelector","deleteContact","ContactList","contacts","state","filterValue","filter","dispatch","filtredContacts","name","toLowerCase","includes","contactList","map","number","id","button"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,0BAAd;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,QAA8B,qBAA9B;;AAIA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAC7B,QAAM;AAAEC,IAAAA;AAAF,MAAeH,WAAW,CAACI,KAAK,IAAIA,KAAK,CAACD,QAAhB,CAAhC;AACA,QAAME,WAAW,GAAGL,WAAW,CAACI,KAAK,IAAIA,KAAK,CAACE,MAAhB,CAA/B;AACA,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AAEA,QAAMS,eAAe,GAAGL,QAAH,aAAGA,QAAH,uBAAGA,QAAQ,CAAEG,MAAV,CAAiB;AAAA,QAAC;AAAEG,MAAAA;AAAF,KAAD;AAAA,WACrCA,IAAI,CAACC,WAAL,GAAmBC,QAAnB,CAA4BN,WAAW,CAACK,WAAZ,EAA5B,CADqC;AAAA,GAAjB,CAAxB;AAIA,sBAEI;AAAI,IAAA,SAAS,EAAEZ,CAAC,CAACc,WAAjB;AAAA,cACKJ,eADL,aACKA,eADL,uBACKA,eAAe,CAAEK,GAAjB,CAAqB,SAA0B;AAAA,UAAzB;AAAEJ,QAAAA,IAAF;AAAQK,QAAAA,MAAR;AAAgBC,QAAAA;AAAhB,OAAyB;AAC5C,0BAAO;AAAA,mBAAcN,IAAd,QAAsBK,MAAtB,oBAA8B;AAAQ,UAAA,SAAS,EAAEhB,CAAC,CAACkB,MAArB;AAA6B,UAAA,IAAI,EAAC,QAAlC;AAA2C,UAAA,OAAO,EAAE,MAAMT,QAAQ,CAACN,aAAa,CAACc,EAAD,CAAd,CAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA9B;AAAA,SAASA,EAAT;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFA;AADL;AAAA;AAAA;AAAA;AAAA,UAFJ;AASH,CAlBM;;GAAMb,W;UACYF,W,EACDA,W,EACHD,W;;;KAHRG,W","sourcesContent":["import React from \"react\";\nimport s from './ContactList.module.css'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from \"redux/contactsSlice\";\n\n\n\nexport const ContactList = () => {\n    const { contacts } = useSelector(state => state.contacts);\n    const filterValue = useSelector(state => state.filter);\n    const dispatch = useDispatch();\n\n    const filtredContacts = contacts?.filter(({ name }) =>\n        name.toLowerCase().includes(filterValue.toLowerCase())\n    );\n    \n    return (\n\n        <ul className={s.contactList}>\n            {filtredContacts?.map(({ name, number, id }) => {\n                return <li key={id}>{name}: {number} <button className={s.button} type=\"button\" onClick={() => dispatch(deleteContact(id))}>Delete</button></li>\n            })}\n        </ul>\n\n    );\n};"]},"metadata":{},"sourceType":"module"}