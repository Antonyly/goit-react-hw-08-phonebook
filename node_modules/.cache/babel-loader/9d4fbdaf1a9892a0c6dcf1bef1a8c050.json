{"ast":null,"code":"var _jsxFileName = \"/Users/antonlyzun/Desktop/GoIT/goit-react-hw-03-phonebook/src/components/ContactForm/ContactForm.js\";\nimport React, { Component } from \"react\";\nimport { nanoid } from 'nanoid';\nimport PropTypes from \"prop-types\";\nimport css from './ContactForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ContactForm extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      name: '',\n      number: ''\n    };\n\n    this.handleChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const {\n        name,\n        number\n      } = this.state;\n      const contactObj = {\n        name: name,\n        number: number,\n        id: nanoid()\n      };\n      this.props.addContact(contactObj);\n      this.resetState();\n    };\n\n    this.resetState = () => {\n      this.setState({\n        name: '',\n        number: ''\n      });\n    };\n  }\n\n  render() {\n    const {\n      handleSubmit,\n      handleChange\n    } = this;\n    const {\n      name,\n      number\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: css.form,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n          title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n          required: true,\n          value: name,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Number\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"tel\",\n          name: \"number\",\n          pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n          title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n          required: true,\n          value: number,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: css.btn,\n        type: \"submit\",\n        children: \"Add contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nContactForm.propTypes = {\n  addContact: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/Users/antonlyzun/Desktop/GoIT/goit-react-hw-03-phonebook/src/components/ContactForm/ContactForm.js"],"names":["React","Component","nanoid","PropTypes","css","ContactForm","state","name","number","handleChange","e","value","target","setState","handleSubmit","preventDefault","contactObj","id","props","addContact","resetState","render","form","btn","propTypes","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,GAAP,MAAgB,0BAAhB;;AAEA,OAAO,MAAMC,WAAN,SAA0BJ,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAEvCK,KAFuC,GAE/B;AACJC,MAAAA,IAAI,EAAE,EADF;AAEJC,MAAAA,MAAM,EAAE;AAFJ,KAF+B;;AAAA,SAOvCC,YAPuC,GAOvBC,CAAD,IAAO;AAClB,YAAM;AAAEH,QAAAA,IAAF;AAAQI,QAAAA;AAAR,UAAkBD,CAAC,CAACE,MAA1B;AAEA,WAAKC,QAAL,CAAc;AACV,SAACN,IAAD,GAAQI;AADE,OAAd;AAGH,KAbsC;;AAAA,SAevCG,YAfuC,GAevBJ,CAAD,IAAO;AAClBA,MAAAA,CAAC,CAACK,cAAF;AACA,YAAM;AAACR,QAAAA,IAAD;AAAOC,QAAAA;AAAP,UAAiB,KAAKF,KAA5B;AAEA,YAAMU,UAAU,GAAG;AACfT,QAAAA,IAAI,EAAEA,IADS;AAEfC,QAAAA,MAAM,EAAEA,MAFO;AAGfS,QAAAA,EAAE,EAAEf,MAAM;AAHK,OAAnB;AAMA,WAAKgB,KAAL,CAAWC,UAAX,CAAsBH,UAAtB;AAEA,WAAKI,UAAL;AACH,KA5BsC;;AAAA,SA8BvCA,UA9BuC,GA8B1B,MAAM;AACf,WAAKP,QAAL,CAAc;AACVN,QAAAA,IAAI,EAAE,EADI;AAEVC,QAAAA,MAAM,EAAE;AAFE,OAAd;AAIH,KAnCsC;AAAA;;AAqCvCa,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEP,MAAAA,YAAF;AAAgBL,MAAAA;AAAhB,QAAiC,IAAvC;AACA,UAAM;AAACF,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAiB,KAAKF,KAA5B;AAGA,wBACI;AAAM,MAAA,SAAS,EAAEF,GAAG,CAACkB,IAArB;AAA4B,MAAA,QAAQ,EAAER,YAAtC;AAAA,8BACI;AAAA,wCACA;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,IAAI,EAAC,MAFT;AAGI,UAAA,OAAO,EAAC,wHAHZ;AAII,UAAA,KAAK,EAAC,wIAJV;AAKI,UAAA,QAAQ,MALZ;AAMI,UAAA,KAAK,EAAEP,IANX;AAOI,UAAA,QAAQ,EAAEE;AAPd;AAAA;AAAA;AAAA;AAAA,gBADA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAYI;AAAA,0CACA;AACI,UAAA,IAAI,EAAC,KADT;AAEI,UAAA,IAAI,EAAC,QAFT;AAGI,UAAA,OAAO,EAAC,wFAHZ;AAII,UAAA,KAAK,EAAC,8FAJV;AAKI,UAAA,QAAQ,MALZ;AAMI,UAAA,KAAK,EAAED,MANX;AAOI,UAAA,QAAQ,EAAEC;AAPd;AAAA;AAAA;AAAA;AAAA,gBADA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZJ,eAuBI;AAAQ,QAAA,SAAS,EAAEL,GAAG,CAACmB,GAAvB;AAA4B,QAAA,IAAI,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA2BH;;AArEsC;AAyE3ClB,WAAW,CAACmB,SAAZ,GAAwB;AACpBL,EAAAA,UAAU,EAAEhB,SAAS,CAACsB,IAAV,CAAeC;AADP,CAAxB","sourcesContent":["import React, { Component } from \"react\";\nimport { nanoid } from 'nanoid'\nimport PropTypes from \"prop-types\"\nimport css from './ContactForm.module.css'\n\nexport class ContactForm extends Component {\n\n    state = {\n        name: '',\n        number: ''\n    }\n    \n    handleChange = (e) => {\n        const { name, value } = e.target\n        \n        this.setState({\n            [name]: value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        const {name, number} = this.state\n\n        const contactObj = {\n            name: name,\n            number: number,\n            id: nanoid()\n        }\n        \n        this.props.addContact(contactObj) \n\n        this.resetState()\n    }\n    \n    resetState = () => {\n        this.setState({\n            name: '',\n            number: ''\n        })\n    }\n\n    render() {\n        const { handleSubmit, handleChange } = this\n        const {name, number} = this.state\n\n\n        return (\n            <form className={css.form}  onSubmit={handleSubmit}>\n                <label>Name\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required\n                    value={name}\n                    onChange={handleChange}\n                />\n                </label>\n                <label>Number\n                <input\n                    type=\"tel\"\n                    name=\"number\"\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    required\n                    value={number}\n                    onChange={handleChange}\n                />\n                </label>\n                <button className={css.btn} type='submit'>Add contact</button>\n            </form>\n        )\n    }   \n    \n}\n\nContactForm.propTypes = {\n    addContact: PropTypes.func.isRequired\n}"]},"metadata":{},"sourceType":"module"}