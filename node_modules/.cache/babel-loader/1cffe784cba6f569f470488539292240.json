{"ast":null,"code":"var _jsxFileName = \"/Users/antonlyzun/Desktop/GoIT/goit-react-hw-06-phonebook/src/components/App.jsx\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport ContactForm from './ContactForm/ContactForm';\nimport Filter from './Filter/Filter';\nimport ContactList from './ContactList/ContactList';\nimport s from \"./ContactList/contactList.module.css\";\nimport { add, remove } from '../redux/contacts/contacts-slice';\nimport { setFilter } from '../redux/filter/filter-slice';\nimport { getContacts } from '../redux/contacts/contacts-selector';\nimport { getFilter } from '../redux/filter/filter-selector';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const filter = useSelector(getFilter);\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  function addContact(data) {\n    const searchName = contacts.map(contact => contact.name).includes(data.name);\n\n    if (searchName) {\n      return alert(`${data.name} is already in contacts.`);\n    }\n\n    if (data.name.length === 0) {\n      return alert(\"Fields must be filled!\");\n    }\n\n    dispatch(add(data));\n  }\n\n  const removeContact = id => {\n    dispatch(remove(id));\n  };\n\n  const changeFilter = _ref => {\n    let {\n      target\n    } = _ref;\n    return dispatch(setFilter(target.value));\n  };\n\n  const getVisibleContacts = () => {\n    if (!filter) {\n      return contacts;\n    }\n\n    return contacts.filter(contacts => contacts.name.toLowerCase().includes(filter.toLowerCase()));\n  };\n\n  const visibleContacts = getVisibleContacts();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: s.title,\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n      onSubmit: addContact\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: s.title,\n      children: \"Contacts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      value: filter,\n      onChange: changeFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n      contacts: visibleContacts,\n      onRemoveContact: removeContact\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"rMXmdjDKNX7jr0N6jsEL5NpXbuI=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/antonlyzun/Desktop/GoIT/goit-react-hw-06-phonebook/src/components/App.jsx"],"names":["useSelector","useDispatch","ContactForm","Filter","ContactList","s","add","remove","setFilter","getContacts","getFilter","App","filter","contacts","dispatch","addContact","data","searchName","map","contact","name","includes","alert","length","removeContact","id","changeFilter","target","value","getVisibleContacts","toLowerCase","visibleContacts","container","title"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AAEA,OAAOC,CAAP,MAAc,sCAAd;AAEA,SAASC,GAAT,EAAcC,MAAd,QAA4B,kCAA5B;AACA,SAASC,SAAT,QAA0B,8BAA1B;AACA,SAASC,WAAT,QAA4B,qCAA5B;AACA,SAASC,SAAT,QAA0B,iCAA1B;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAMC,MAAM,GAAGZ,WAAW,CAACU,SAAD,CAA1B;AACA,QAAMG,QAAQ,GAAGb,WAAW,CAACS,WAAD,CAA5B;AAEA,QAAMK,QAAQ,GAAGb,WAAW,EAA5B;;AAEA,WAASc,UAAT,CAAoBC,IAApB,EAA0B;AAExB,UAAMC,UAAU,GAAGJ,QAAQ,CACxBK,GADgB,CACXC,OAAD,IAAaA,OAAO,CAACC,IADT,EAEhBC,QAFgB,CAEPL,IAAI,CAACI,IAFE,CAAnB;;AAIC,QAAIH,UAAJ,EAAgB;AACf,aAAOK,KAAK,CAAE,GAAEN,IAAI,CAACI,IAAK,0BAAd,CAAZ;AACA;;AAEF,QAAIJ,IAAI,CAACI,IAAL,CAAUG,MAAV,KAAqB,CAAzB,EAA4B;AAC1B,aAAOD,KAAK,CAAC,wBAAD,CAAZ;AACD;;AACDR,IAAAA,QAAQ,CAACR,GAAG,CAACU,IAAD,CAAJ,CAAR;AACD;;AAED,QAAMQ,aAAa,GAAIC,EAAD,IAAQ;AACxBX,IAAAA,QAAQ,CAACP,MAAM,CAACkB,EAAD,CAAP,CAAR;AACH,GAFH;;AAIA,QAAMC,YAAY,GAAG;AAAA,QAAC;AAAEC,MAAAA;AAAF,KAAD;AAAA,WAAgBb,QAAQ,CAACN,SAAS,CAACmB,MAAM,CAACC,KAAR,CAAV,CAAxB;AAAA,GAArB;;AAEA,QAAMC,kBAAkB,GAAG,MAAM;AAE/B,QAAI,CAACjB,MAAL,EAAa;AACX,aAAOC,QAAP;AACD;;AAED,WAAOA,QAAQ,CAACD,MAAT,CAAiBC,QAAD,IACrBA,QAAQ,CAACO,IAAT,CAAcU,WAAd,GAA4BT,QAA5B,CAAqCT,MAAM,CAACkB,WAAP,EAArC,CADK,CAAP;AAGD,GATD;;AAWA,QAAMC,eAAe,GAAGF,kBAAkB,EAA1C;AAEA,sBACE;AAAK,IAAA,SAAS,EAAExB,CAAC,CAAC2B,SAAlB;AAAA,4BACE;AAAI,MAAA,SAAS,EAAE3B,CAAC,CAAC4B,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAElB;AAAvB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAI,MAAA,SAAS,EAAEV,CAAC,CAAC4B,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAErB,MAAf;AAAuB,MAAA,QAAQ,EAAEc;AAAjC;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAEK,eAAvB;AAAwC,MAAA,eAAe,EAAEP;AAAzD;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAnDD;;GAAMb,G;UAEWX,W,EACEA,W,EAEAC,W;;;KALbU,G;AAqDN,eAAeA,GAAf","sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\n\nimport ContactForm from './ContactForm/ContactForm';\nimport Filter from './Filter/Filter';\nimport ContactList from './ContactList/ContactList';\n\nimport s from \"./ContactList/contactList.module.css\";\n\nimport { add, remove } from '../redux/contacts/contacts-slice';\nimport { setFilter } from '../redux/filter/filter-slice';\nimport { getContacts } from '../redux/contacts/contacts-selector';\nimport { getFilter } from '../redux/filter/filter-selector';\n\nconst App = () => {\n\n  const filter = useSelector(getFilter);\n  const contacts = useSelector(getContacts);\n\n  const dispatch = useDispatch();\n\n  function addContact(data) {\n\n    const searchName = contacts\n      .map((contact) => contact.name)\n      .includes(data.name);\n\n     if (searchName) {\n      return alert(`${data.name} is already in contacts.`);\n     }\n    \n    if (data.name.length === 0) {\n      return alert(\"Fields must be filled!\");\n    }\n    dispatch(add(data));\n  }\n\n  const removeContact = (id) => {\n        dispatch(remove(id));\n    }\n\n  const changeFilter = ({ target }) => dispatch(setFilter(target.value));\n\n  const getVisibleContacts = () => {\n\n    if (!filter) {\n      return contacts;\n    }\n\n    return contacts.filter((contacts) =>\n      contacts.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n\n  const visibleContacts = getVisibleContacts();\n\n  return (\n    <div className={s.container}>\n      <h1 className={s.title}>Phonebook</h1>\n      <ContactForm onSubmit={addContact} />\n      <h2 className={s.title}>Contacts</h2>\n      <Filter value={filter} onChange={changeFilter} />\n      <ContactList contacts={visibleContacts} onRemoveContact={removeContact} />\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}